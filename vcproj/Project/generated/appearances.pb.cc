// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: appearances.proto
// Protobuf C++ Version: 5.29.3

#include "appearances.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace rme {
namespace protobuf {
namespace appearances {

inline constexpr SpritePhase::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        duration_min_{0u},
        duration_max_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SpritePhase::SpritePhase(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpritePhaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpritePhaseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpritePhaseDefaultTypeInternal() {}
  union {
    SpritePhase _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpritePhaseDefaultTypeInternal _SpritePhase_default_instance_;

inline constexpr SpecialMeaningAppearanceIds::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gold_coin_id_{0u},
        platinum_coin_id_{0u},
        crystal_coin_id_{0u},
        tibia_coin_id_{0u},
        stamped_letter_id_{0u},
        supply_stash_id_{0u},
        reward_chest_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SpecialMeaningAppearanceIds::SpecialMeaningAppearanceIds(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpecialMeaningAppearanceIdsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecialMeaningAppearanceIdsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecialMeaningAppearanceIdsDefaultTypeInternal() {}
  union {
    SpecialMeaningAppearanceIds _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecialMeaningAppearanceIdsDefaultTypeInternal _SpecialMeaningAppearanceIds_default_instance_;

inline constexpr Coordinate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0u},
        y_{0u},
        z_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Coordinate::Coordinate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoordinateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinateDefaultTypeInternal() {}
  union {
    Coordinate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinateDefaultTypeInternal _Coordinate_default_instance_;

inline constexpr Box::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0u},
        y_{0u},
        width_{0u},
        height_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Box::Box(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BoxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoxDefaultTypeInternal() {}
  union {
    Box _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoxDefaultTypeInternal _Box_default_instance_;

inline constexpr AppearanceFlagWriteOnce::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        max_text_length_once_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagWriteOnce::AppearanceFlagWriteOnce(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagWriteOnceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagWriteOnceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagWriteOnceDefaultTypeInternal() {}
  union {
    AppearanceFlagWriteOnce _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagWriteOnceDefaultTypeInternal _AppearanceFlagWriteOnce_default_instance_;

inline constexpr AppearanceFlagWrite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        max_text_length_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagWrite::AppearanceFlagWrite(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagWriteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagWriteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagWriteDefaultTypeInternal() {}
  union {
    AppearanceFlagWrite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagWriteDefaultTypeInternal _AppearanceFlagWrite_default_instance_;

inline constexpr AppearanceFlagUpgradeClassification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        upgrade_classification_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagUpgradeClassification::AppearanceFlagUpgradeClassification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagUpgradeClassificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagUpgradeClassificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagUpgradeClassificationDefaultTypeInternal() {}
  union {
    AppearanceFlagUpgradeClassification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagUpgradeClassificationDefaultTypeInternal _AppearanceFlagUpgradeClassification_default_instance_;

inline constexpr AppearanceFlagSkillWheelGem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gem_quality_id_{0u},
        vocation_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagSkillWheelGem::AppearanceFlagSkillWheelGem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagSkillWheelGemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagSkillWheelGemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagSkillWheelGemDefaultTypeInternal() {}
  union {
    AppearanceFlagSkillWheelGem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagSkillWheelGemDefaultTypeInternal _AppearanceFlagSkillWheelGem_default_instance_;

inline constexpr AppearanceFlagShift::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0u},
        y_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagShift::AppearanceFlagShift(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagShiftDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagShiftDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagShiftDefaultTypeInternal() {}
  union {
    AppearanceFlagShift _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagShiftDefaultTypeInternal _AppearanceFlagShift_default_instance_;

inline constexpr AppearanceFlagProficiency::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        proficiency_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagProficiency::AppearanceFlagProficiency(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagProficiencyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagProficiencyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagProficiencyDefaultTypeInternal() {}
  union {
    AppearanceFlagProficiency _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagProficiencyDefaultTypeInternal _AppearanceFlagProficiency_default_instance_;

inline constexpr AppearanceFlagNPC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_quest_flag_display_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sale_price_{0u},
        buy_price_{0u},
        currency_object_type_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagNPC::AppearanceFlagNPC(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagNPCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagNPCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagNPCDefaultTypeInternal() {}
  union {
    AppearanceFlagNPC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagNPCDefaultTypeInternal _AppearanceFlagNPC_default_instance_;

inline constexpr AppearanceFlagMarket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        restrict_to_profession_{},
        trade_as_object_id_{0u},
        show_as_object_id_{0u},
        minimum_level_{0u},
        category_{static_cast< ::rme::protobuf::appearances::ITEM_CATEGORY >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagMarket::AppearanceFlagMarket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagMarketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagMarketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagMarketDefaultTypeInternal() {}
  union {
    AppearanceFlagMarket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagMarketDefaultTypeInternal _AppearanceFlagMarket_default_instance_;

inline constexpr AppearanceFlagLight::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        brightness_{0u},
        color_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagLight::AppearanceFlagLight(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagLightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagLightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagLightDefaultTypeInternal() {}
  union {
    AppearanceFlagLight _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagLightDefaultTypeInternal _AppearanceFlagLight_default_instance_;

inline constexpr AppearanceFlagLenshelp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagLenshelp::AppearanceFlagLenshelp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagLenshelpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagLenshelpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagLenshelpDefaultTypeInternal() {}
  union {
    AppearanceFlagLenshelp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagLenshelpDefaultTypeInternal _AppearanceFlagLenshelp_default_instance_;

inline constexpr AppearanceFlagImbueable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        slot_count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagImbueable::AppearanceFlagImbueable(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagImbueableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagImbueableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagImbueableDefaultTypeInternal() {}
  union {
    AppearanceFlagImbueable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagImbueableDefaultTypeInternal _AppearanceFlagImbueable_default_instance_;

inline constexpr AppearanceFlagHook::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        direction_{static_cast< ::rme::protobuf::appearances::HOOK_TYPE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagHook::AppearanceFlagHook(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagHookDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagHookDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagHookDefaultTypeInternal() {}
  union {
    AppearanceFlagHook _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagHookDefaultTypeInternal _AppearanceFlagHook_default_instance_;

inline constexpr AppearanceFlagHeight::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        elevation_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagHeight::AppearanceFlagHeight(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagHeightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagHeightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagHeightDefaultTypeInternal() {}
  union {
    AppearanceFlagHeight _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagHeightDefaultTypeInternal _AppearanceFlagHeight_default_instance_;

inline constexpr AppearanceFlagDefaultAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_{static_cast< ::rme::protobuf::appearances::PLAYER_ACTION >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagDefaultAction::AppearanceFlagDefaultAction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagDefaultActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagDefaultActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagDefaultActionDefaultTypeInternal() {}
  union {
    AppearanceFlagDefaultAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagDefaultActionDefaultTypeInternal _AppearanceFlagDefaultAction_default_instance_;

inline constexpr AppearanceFlagCyclopedia::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cyclopedia_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagCyclopedia::AppearanceFlagCyclopedia(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagCyclopediaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagCyclopediaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagCyclopediaDefaultTypeInternal() {}
  union {
    AppearanceFlagCyclopedia _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagCyclopediaDefaultTypeInternal _AppearanceFlagCyclopedia_default_instance_;

inline constexpr AppearanceFlagClothes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        slot_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagClothes::AppearanceFlagClothes(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagClothesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagClothesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagClothesDefaultTypeInternal() {}
  union {
    AppearanceFlagClothes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagClothesDefaultTypeInternal _AppearanceFlagClothes_default_instance_;

inline constexpr AppearanceFlagChangedToExpire::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        former_object_typeid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagChangedToExpire::AppearanceFlagChangedToExpire(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagChangedToExpireDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagChangedToExpireDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagChangedToExpireDefaultTypeInternal() {}
  union {
    AppearanceFlagChangedToExpire _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagChangedToExpireDefaultTypeInternal _AppearanceFlagChangedToExpire_default_instance_;

inline constexpr AppearanceFlagBank::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        waypoints_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagBank::AppearanceFlagBank(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagBankDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagBankDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagBankDefaultTypeInternal() {}
  union {
    AppearanceFlagBank _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagBankDefaultTypeInternal _AppearanceFlagBank_default_instance_;

inline constexpr AppearanceFlagAutomap::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        color_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagAutomap::AppearanceFlagAutomap(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagAutomapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagAutomapDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagAutomapDefaultTypeInternal() {}
  union {
    AppearanceFlagAutomap _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagAutomapDefaultTypeInternal _AppearanceFlagAutomap_default_instance_;

inline constexpr SpriteAnimation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sprite_phase_{},
        default_start_phase_{0u},
        synchronized_{false},
        random_start_phase_{false},
        loop_count_{0u},
        loop_type_{static_cast< ::rme::protobuf::appearances::ANIMATION_LOOP_TYPE >(-1)} {}

template <typename>
PROTOBUF_CONSTEXPR SpriteAnimation::SpriteAnimation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpriteAnimationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpriteAnimationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpriteAnimationDefaultTypeInternal() {}
  union {
    SpriteAnimation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpriteAnimationDefaultTypeInternal _SpriteAnimation_default_instance_;

inline constexpr AppearanceFlags::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        npcsaledata_{},
        restrict_to_vocation_{},
        bank_{nullptr},
        write_{nullptr},
        write_once_{nullptr},
        hook_{nullptr},
        light_{nullptr},
        shift_{nullptr},
        height_{nullptr},
        automap_{nullptr},
        lenshelp_{nullptr},
        clothes_{nullptr},
        default_action_{nullptr},
        market_{nullptr},
        changedtoexpire_{nullptr},
        cyclopediaitem_{nullptr},
        upgradeclassification_{nullptr},
        skillwheel_gem_{nullptr},
        imbueable_{nullptr},
        proficiency_{nullptr},
        clip_{false},
        bottom_{false},
        top_{false},
        container_{false},
        cumulative_{false},
        usable_{false},
        forceuse_{false},
        multiuse_{false},
        liquidpool_{false},
        unpass_{false},
        unmove_{false},
        unsight_{false},
        avoid_{false},
        no_movement_animation_{false},
        take_{false},
        liquidcontainer_{false},
        hang_{false},
        rotate_{false},
        dont_hide_{false},
        translucent_{false},
        lying_object_{false},
        animate_always_{false},
        fullbank_{false},
        ignore_look_{false},
        wrap_{false},
        unwrap_{false},
        topeffect_{false},
        corpse_{false},
        player_corpse_{false},
        ammo_{false},
        show_off_socket_{false},
        reportable_{false},
        reverse_addons_east_{false},
        reverse_addons_west_{false},
        reverse_addons_south_{false},
        reverse_addons_north_{false},
        wearout_{false},
        clockexpire_{false},
        expire_{false},
        expirestop_{false},
        wrapkit_{false},
        dual_wielding_{false},
        minimum_level_{0u},
        weapon_type_{static_cast< ::rme::protobuf::appearances::WEAPON_TYPE >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlags::AppearanceFlags(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceFlagsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagsDefaultTypeInternal() {}
  union {
    AppearanceFlags _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagsDefaultTypeInternal _AppearanceFlags_default_instance_;

inline constexpr SpriteInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sprite_id_{},
        bounding_box_per_direction_{},
        animation_{nullptr},
        pattern_width_{0u},
        pattern_height_{0u},
        pattern_depth_{0u},
        layers_{0u},
        bounding_square_{0u},
        is_opaque_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SpriteInfo::SpriteInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpriteInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpriteInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpriteInfoDefaultTypeInternal() {}
  union {
    SpriteInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpriteInfoDefaultTypeInternal _SpriteInfo_default_instance_;

inline constexpr FrameGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sprite_info_{nullptr},
        fixed_frame_group_{static_cast< ::rme::protobuf::appearances::FIXED_FRAME_GROUP >(0)},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR FrameGroup::FrameGroup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrameGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameGroupDefaultTypeInternal() {}
  union {
    FrameGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameGroupDefaultTypeInternal _FrameGroup_default_instance_;

inline constexpr Appearance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        frame_group_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        flags_{nullptr},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Appearance::Appearance(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceDefaultTypeInternal() {}
  union {
    Appearance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceDefaultTypeInternal _Appearance_default_instance_;

inline constexpr Appearances::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        object_{},
        outfit_{},
        effect_{},
        missile_{},
        special_meaning_appearance_ids_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Appearances::Appearances(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AppearancesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearancesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearancesDefaultTypeInternal() {}
  union {
    Appearances _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearancesDefaultTypeInternal _Appearances_default_instance_;
}  // namespace appearances
}  // namespace protobuf
}  // namespace rme
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_appearances_2eproto[8];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_appearances_2eproto = nullptr;
const ::uint32_t
    TableStruct_appearances_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Coordinate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Coordinate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Coordinate, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Coordinate, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Coordinate, _impl_.z_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearances, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearances, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearances, _impl_.object_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearances, _impl_.outfit_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearances, _impl_.effect_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearances, _impl_.missile_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearances, _impl_.special_meaning_appearance_ids_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpritePhase, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpritePhase, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpritePhase, _impl_.duration_min_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpritePhase, _impl_.duration_max_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteAnimation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteAnimation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteAnimation, _impl_.default_start_phase_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteAnimation, _impl_.synchronized_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteAnimation, _impl_.random_start_phase_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteAnimation, _impl_.loop_type_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteAnimation, _impl_.loop_count_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteAnimation, _impl_.sprite_phase_),
        0,
        1,
        2,
        4,
        3,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Box, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Box, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Box, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Box, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Box, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Box, _impl_.height_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_.pattern_width_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_.pattern_height_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_.pattern_depth_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_.layers_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_.sprite_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_.bounding_square_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_.animation_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_.is_opaque_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpriteInfo, _impl_.bounding_box_per_direction_),
        1,
        2,
        3,
        4,
        ~0u,
        5,
        0,
        6,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::FrameGroup, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::FrameGroup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::FrameGroup, _impl_.fixed_frame_group_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::FrameGroup, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::FrameGroup, _impl_.sprite_info_),
        1,
        2,
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearance, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearance, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearance, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearance, _impl_.frame_group_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearance, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearance, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::Appearance, _impl_.description_),
        3,
        ~0u,
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.bank_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.clip_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.bottom_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.top_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.container_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.cumulative_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.usable_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.forceuse_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.multiuse_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.write_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.write_once_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.liquidpool_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.unpass_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.unmove_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.unsight_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.avoid_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.no_movement_animation_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.take_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.liquidcontainer_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.hang_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.hook_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.rotate_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.light_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.dont_hide_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.translucent_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.shift_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.lying_object_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.animate_always_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.automap_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.lenshelp_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.fullbank_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.ignore_look_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.clothes_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.default_action_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.market_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.wrap_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.unwrap_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.topeffect_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.npcsaledata_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.changedtoexpire_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.corpse_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.player_corpse_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.cyclopediaitem_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.ammo_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.show_off_socket_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.reportable_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.upgradeclassification_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.reverse_addons_east_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.reverse_addons_west_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.reverse_addons_south_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.reverse_addons_north_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.wearout_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.clockexpire_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.expire_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.expirestop_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.wrapkit_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.skillwheel_gem_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.dual_wielding_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.imbueable_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.proficiency_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.restrict_to_vocation_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.minimum_level_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlags, _impl_.weapon_type_),
        0,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        1,
        2,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        3,
        35,
        4,
        36,
        37,
        5,
        6,
        38,
        39,
        7,
        8,
        40,
        41,
        9,
        10,
        11,
        42,
        43,
        44,
        ~0u,
        12,
        45,
        46,
        13,
        47,
        48,
        49,
        14,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        15,
        59,
        16,
        17,
        ~0u,
        60,
        61,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagUpgradeClassification, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagUpgradeClassification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagUpgradeClassification, _impl_.upgrade_classification_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagBank, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagBank, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagBank, _impl_.waypoints_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagWrite, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagWrite, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagWrite, _impl_.max_text_length_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagWriteOnce, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagWriteOnce, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagWriteOnce, _impl_.max_text_length_once_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagLight, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagLight, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagLight, _impl_.brightness_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagLight, _impl_.color_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagHeight, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagHeight, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagHeight, _impl_.elevation_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagShift, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagShift, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagShift, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagShift, _impl_.y_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagClothes, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagClothes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagClothes, _impl_.slot_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagDefaultAction, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagDefaultAction, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagDefaultAction, _impl_.action_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagMarket, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagMarket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagMarket, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagMarket, _impl_.trade_as_object_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagMarket, _impl_.show_as_object_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagMarket, _impl_.restrict_to_profession_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagMarket, _impl_.minimum_level_),
        3,
        0,
        1,
        ~0u,
        2,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagNPC, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagNPC, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagNPC, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagNPC, _impl_.location_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagNPC, _impl_.sale_price_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagNPC, _impl_.buy_price_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagNPC, _impl_.currency_object_type_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagNPC, _impl_.currency_quest_flag_display_name_),
        0,
        1,
        3,
        4,
        5,
        2,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagAutomap, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagAutomap, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagAutomap, _impl_.color_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagHook, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagHook, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagHook, _impl_.direction_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagLenshelp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagLenshelp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagLenshelp, _impl_.id_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagChangedToExpire, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagChangedToExpire, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagChangedToExpire, _impl_.former_object_typeid_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagCyclopedia, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagCyclopedia, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagCyclopedia, _impl_.cyclopedia_type_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpecialMeaningAppearanceIds, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.gold_coin_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.platinum_coin_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.crystal_coin_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.tibia_coin_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.stamped_letter_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.supply_stash_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.reward_chest_id_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagSkillWheelGem, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagSkillWheelGem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagSkillWheelGem, _impl_.gem_quality_id_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagSkillWheelGem, _impl_.vocation_id_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagImbueable, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagImbueable, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagImbueable, _impl_.slot_count_),
        0,
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagProficiency, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagProficiency, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rme::protobuf::appearances::AppearanceFlagProficiency, _impl_.proficiency_id_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::rme::protobuf::appearances::Coordinate)},
        {14, 27, -1, sizeof(::rme::protobuf::appearances::Appearances)},
        {32, 42, -1, sizeof(::rme::protobuf::appearances::SpritePhase)},
        {44, 58, -1, sizeof(::rme::protobuf::appearances::SpriteAnimation)},
        {64, 76, -1, sizeof(::rme::protobuf::appearances::Box)},
        {80, 97, -1, sizeof(::rme::protobuf::appearances::SpriteInfo)},
        {106, 117, -1, sizeof(::rme::protobuf::appearances::FrameGroup)},
        {120, 133, -1, sizeof(::rme::protobuf::appearances::Appearance)},
        {138, 210, -1, sizeof(::rme::protobuf::appearances::AppearanceFlags)},
        {274, 283, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagUpgradeClassification)},
        {284, 293, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagBank)},
        {294, 303, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagWrite)},
        {304, 313, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagWriteOnce)},
        {314, 324, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagLight)},
        {326, 335, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagHeight)},
        {336, 346, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagShift)},
        {348, 357, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagClothes)},
        {358, 367, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagDefaultAction)},
        {368, 381, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagMarket)},
        {386, 400, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagNPC)},
        {406, 415, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagAutomap)},
        {416, 425, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagHook)},
        {426, 435, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagLenshelp)},
        {436, 445, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagChangedToExpire)},
        {446, 455, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagCyclopedia)},
        {456, 471, -1, sizeof(::rme::protobuf::appearances::SpecialMeaningAppearanceIds)},
        {478, 488, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagSkillWheelGem)},
        {490, 499, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagImbueable)},
        {500, 509, -1, sizeof(::rme::protobuf::appearances::AppearanceFlagProficiency)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::rme::protobuf::appearances::_Coordinate_default_instance_._instance,
    &::rme::protobuf::appearances::_Appearances_default_instance_._instance,
    &::rme::protobuf::appearances::_SpritePhase_default_instance_._instance,
    &::rme::protobuf::appearances::_SpriteAnimation_default_instance_._instance,
    &::rme::protobuf::appearances::_Box_default_instance_._instance,
    &::rme::protobuf::appearances::_SpriteInfo_default_instance_._instance,
    &::rme::protobuf::appearances::_FrameGroup_default_instance_._instance,
    &::rme::protobuf::appearances::_Appearance_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlags_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagUpgradeClassification_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagBank_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagWrite_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagWriteOnce_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagLight_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagHeight_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagShift_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagClothes_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagDefaultAction_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagMarket_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagNPC_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagAutomap_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagHook_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagLenshelp_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagChangedToExpire_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagCyclopedia_default_instance_._instance,
    &::rme::protobuf::appearances::_SpecialMeaningAppearanceIds_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagSkillWheelGem_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagImbueable_default_instance_._instance,
    &::rme::protobuf::appearances::_AppearanceFlagProficiency_default_instance_._instance,
};
const char descriptor_table_protodef_appearances_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021appearances.proto\022\030rme.protobuf.appear"
    "ances\"-\n\nCoordinate\022\t\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001("
    "\r\022\t\n\001z\030\003 \001(\r\"\305\002\n\013Appearances\0224\n\006object\030\001"
    " \003(\0132$.rme.protobuf.appearances.Appearan"
    "ce\0224\n\006outfit\030\002 \003(\0132$.rme.protobuf.appear"
    "ances.Appearance\0224\n\006effect\030\003 \003(\0132$.rme.p"
    "rotobuf.appearances.Appearance\0225\n\007missil"
    "e\030\004 \003(\0132$.rme.protobuf.appearances.Appea"
    "rance\022]\n\036special_meaning_appearance_ids\030"
    "\005 \001(\01325.rme.protobuf.appearances.Special"
    "MeaningAppearanceIds\"9\n\013SpritePhase\022\024\n\014d"
    "uration_min\030\001 \001(\r\022\024\n\014duration_max\030\002 \001(\r\""
    "\363\001\n\017SpriteAnimation\022\033\n\023default_start_pha"
    "se\030\001 \001(\r\022\024\n\014synchronized\030\002 \001(\010\022\032\n\022random"
    "_start_phase\030\003 \001(\010\022@\n\tloop_type\030\004 \001(\0162-."
    "rme.protobuf.appearances.ANIMATION_LOOP_"
    "TYPE\022\022\n\nloop_count\030\005 \001(\r\022;\n\014sprite_phase"
    "\030\006 \003(\0132%.rme.protobuf.appearances.Sprite"
    "Phase\":\n\003Box\022\t\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001(\r\022\r\n\005wi"
    "dth\030\003 \001(\r\022\016\n\006height\030\004 \001(\r\"\242\002\n\nSpriteInfo"
    "\022\025\n\rpattern_width\030\001 \001(\r\022\026\n\016pattern_heigh"
    "t\030\002 \001(\r\022\025\n\rpattern_depth\030\003 \001(\r\022\016\n\006layers"
    "\030\004 \001(\r\022\021\n\tsprite_id\030\005 \003(\r\022\027\n\017bounding_sq"
    "uare\030\007 \001(\r\022<\n\tanimation\030\006 \001(\0132).rme.prot"
    "obuf.appearances.SpriteAnimation\022\021\n\tis_o"
    "paque\030\010 \001(\010\022A\n\032bounding_box_per_directio"
    "n\030\t \003(\0132\035.rme.protobuf.appearances.Box\"\233"
    "\001\n\nFrameGroup\022F\n\021fixed_frame_group\030\001 \001(\016"
    "2+.rme.protobuf.appearances.FIXED_FRAME_"
    "GROUP\022\n\n\002id\030\002 \001(\r\0229\n\013sprite_info\030\003 \001(\0132$"
    ".rme.protobuf.appearances.SpriteInfo\"\260\001\n"
    "\nAppearance\022\n\n\002id\030\001 \001(\r\0229\n\013frame_group\030\002"
    " \003(\0132$.rme.protobuf.appearances.FrameGro"
    "up\0228\n\005flags\030\003 \001(\0132).rme.protobuf.appeara"
    "nces.AppearanceFlags\022\014\n\004name\030\004 \001(\014\022\023\n\013de"
    "scription\030\005 \001(\014\"\211\022\n\017AppearanceFlags\022:\n\004b"
    "ank\030\001 \001(\0132,.rme.protobuf.appearances.App"
    "earanceFlagBank\022\014\n\004clip\030\002 \001(\010\022\016\n\006bottom\030"
    "\003 \001(\010\022\013\n\003top\030\004 \001(\010\022\021\n\tcontainer\030\005 \001(\010\022\022\n"
    "\ncumulative\030\006 \001(\010\022\016\n\006usable\030\007 \001(\010\022\020\n\010for"
    "ceuse\030\010 \001(\010\022\020\n\010multiuse\030\t \001(\010\022<\n\005write\030\n"
    " \001(\0132-.rme.protobuf.appearances.Appearan"
    "ceFlagWrite\022E\n\nwrite_once\030\013 \001(\01321.rme.pr"
    "otobuf.appearances.AppearanceFlagWriteOn"
    "ce\022\022\n\nliquidpool\030\014 \001(\010\022\016\n\006unpass\030\r \001(\010\022\016"
    "\n\006unmove\030\016 \001(\010\022\017\n\007unsight\030\017 \001(\010\022\r\n\005avoid"
    "\030\020 \001(\010\022\035\n\025no_movement_animation\030\021 \001(\010\022\014\n"
    "\004take\030\022 \001(\010\022\027\n\017liquidcontainer\030\023 \001(\010\022\014\n\004"
    "hang\030\024 \001(\010\022:\n\004hook\030\025 \001(\0132,.rme.protobuf."
    "appearances.AppearanceFlagHook\022\016\n\006rotate"
    "\030\026 \001(\010\022<\n\005light\030\027 \001(\0132-.rme.protobuf.app"
    "earances.AppearanceFlagLight\022\021\n\tdont_hid"
    "e\030\030 \001(\010\022\023\n\013translucent\030\031 \001(\010\022<\n\005shift\030\032 "
    "\001(\0132-.rme.protobuf.appearances.Appearanc"
    "eFlagShift\022>\n\006height\030\033 \001(\0132..rme.protobu"
    "f.appearances.AppearanceFlagHeight\022\024\n\014ly"
    "ing_object\030\034 \001(\010\022\026\n\016animate_always\030\035 \001(\010"
    "\022@\n\007automap\030\036 \001(\0132/.rme.protobuf.appeara"
    "nces.AppearanceFlagAutomap\022B\n\010lenshelp\030\037"
    " \001(\01320.rme.protobuf.appearances.Appearan"
    "ceFlagLenshelp\022\020\n\010fullbank\030  \001(\010\022\023\n\013igno"
    "re_look\030! \001(\010\022@\n\007clothes\030\" \001(\0132/.rme.pro"
    "tobuf.appearances.AppearanceFlagClothes\022"
    "M\n\016default_action\030# \001(\01325.rme.protobuf.a"
    "ppearances.AppearanceFlagDefaultAction\022>"
    "\n\006market\030$ \001(\0132..rme.protobuf.appearance"
    "s.AppearanceFlagMarket\022\014\n\004wrap\030% \001(\010\022\016\n\006"
    "unwrap\030& \001(\010\022\021\n\ttopeffect\030\' \001(\010\022@\n\013npcsa"
    "ledata\030( \003(\0132+.rme.protobuf.appearances."
    "AppearanceFlagNPC\022P\n\017changedtoexpire\030) \001"
    "(\01327.rme.protobuf.appearances.Appearance"
    "FlagChangedToExpire\022\016\n\006corpse\030* \001(\010\022\025\n\rp"
    "layer_corpse\030+ \001(\010\022J\n\016cyclopediaitem\030, \001"
    "(\01322.rme.protobuf.appearances.Appearance"
    "FlagCyclopedia\022\014\n\004ammo\030- \001(\010\022\027\n\017show_off"
    "_socket\030. \001(\010\022\022\n\nreportable\030/ \001(\010\022\\\n\025upg"
    "radeclassification\0300 \001(\0132=.rme.protobuf."
    "appearances.AppearanceFlagUpgradeClassif"
    "ication\022\033\n\023reverse_addons_east\0301 \001(\010\022\033\n\023"
    "reverse_addons_west\0302 \001(\010\022\034\n\024reverse_add"
    "ons_south\0303 \001(\010\022\034\n\024reverse_addons_north\030"
    "4 \001(\010\022\017\n\007wearout\0305 \001(\010\022\023\n\013clockexpire\0306 "
    "\001(\010\022\016\n\006expire\0307 \001(\010\022\022\n\nexpirestop\0308 \001(\010\022"
    "\017\n\007wrapkit\0309 \001(\010\022M\n\016skillwheel_gem\030: \001(\013"
    "25.rme.protobuf.appearances.AppearanceFl"
    "agSkillWheelGem\022\025\n\rdual_wielding\030; \001(\010\022D"
    "\n\timbueable\030< \001(\01321.rme.protobuf.appeara"
    "nces.AppearanceFlagImbueable\022H\n\013proficie"
    "ncy\030= \001(\01323.rme.protobuf.appearances.App"
    "earanceFlagProficiency\022@\n\024restrict_to_vo"
    "cation\030> \003(\0162\".rme.protobuf.appearances."
    "VOCATION\022\025\n\rminimum_level\030\? \001(\r\022:\n\013weapo"
    "n_type\030@ \001(\0162%.rme.protobuf.appearances."
    "WEAPON_TYPE\"E\n#AppearanceFlagUpgradeClas"
    "sification\022\036\n\026upgrade_classification\030\001 \001"
    "(\r\"\'\n\022AppearanceFlagBank\022\021\n\twaypoints\030\001 "
    "\001(\r\".\n\023AppearanceFlagWrite\022\027\n\017max_text_l"
    "ength\030\001 \001(\r\"7\n\027AppearanceFlagWriteOnce\022\034"
    "\n\024max_text_length_once\030\001 \001(\r\"8\n\023Appearan"
    "ceFlagLight\022\022\n\nbrightness\030\001 \001(\r\022\r\n\005color"
    "\030\002 \001(\r\")\n\024AppearanceFlagHeight\022\021\n\televat"
    "ion\030\001 \001(\r\"+\n\023AppearanceFlagShift\022\t\n\001x\030\001 "
    "\001(\r\022\t\n\001y\030\002 \001(\r\"%\n\025AppearanceFlagClothes\022"
    "\014\n\004slot\030\001 \001(\r\"V\n\033AppearanceFlagDefaultAc"
    "tion\0227\n\006action\030\001 \001(\0162\'.rme.protobuf.appe"
    "arances.PLAYER_ACTION\"\354\001\n\024AppearanceFlag"
    "Market\0229\n\010category\030\001 \001(\0162\'.rme.protobuf."
    "appearances.ITEM_CATEGORY\022\032\n\022trade_as_ob"
    "ject_id\030\002 \001(\r\022\031\n\021show_as_object_id\030\003 \001(\r"
    "\022K\n\026restrict_to_profession\030\005 \003(\0162+.rme.p"
    "rotobuf.appearances.PLAYER_PROFESSION\022\025\n"
    "\rminimum_level\030\006 \001(\r\"\245\001\n\021AppearanceFlagN"
    "PC\022\014\n\004name\030\001 \001(\014\022\020\n\010location\030\002 \001(\014\022\022\n\nsa"
    "le_price\030\003 \001(\r\022\021\n\tbuy_price\030\004 \001(\r\022\037\n\027cur"
    "rency_object_type_id\030\005 \001(\r\022(\n currency_q"
    "uest_flag_display_name\030\006 \001(\014\"&\n\025Appearan"
    "ceFlagAutomap\022\r\n\005color\030\001 \001(\r\"L\n\022Appearan"
    "ceFlagHook\0226\n\tdirection\030\001 \001(\0162#.rme.prot"
    "obuf.appearances.HOOK_TYPE\"$\n\026Appearance"
    "FlagLenshelp\022\n\n\002id\030\001 \001(\r\"=\n\035AppearanceFl"
    "agChangedToExpire\022\034\n\024former_object_typei"
    "d\030\001 \001(\r\"3\n\030AppearanceFlagCyclopedia\022\027\n\017c"
    "yclopedia_type\030\001 \001(\r\"\312\001\n\033SpecialMeaningA"
    "ppearanceIds\022\024\n\014gold_coin_id\030\001 \001(\r\022\030\n\020pl"
    "atinum_coin_id\030\002 \001(\r\022\027\n\017crystal_coin_id\030"
    "\003 \001(\r\022\025\n\rtibia_coin_id\030\004 \001(\r\022\031\n\021stamped_"
    "letter_id\030\005 \001(\r\022\027\n\017supply_stash_id\030\006 \001(\r"
    "\022\027\n\017reward_chest_id\030\007 \001(\r\"J\n\033AppearanceF"
    "lagSkillWheelGem\022\026\n\016gem_quality_id\030\001 \001(\r"
    "\022\023\n\013vocation_id\030\002 \001(\r\"-\n\027AppearanceFlagI"
    "mbueable\022\022\n\nslot_count\030\001 \001(\r\"3\n\031Appearan"
    "ceFlagProficiency\022\026\n\016proficiency_id\030\001 \001("
    "\r*\224\001\n\rPLAYER_ACTION\022\026\n\022PLAYER_ACTION_NON"
    "E\020\000\022\026\n\022PLAYER_ACTION_LOOK\020\001\022\025\n\021PLAYER_AC"
    "TION_USE\020\002\022\026\n\022PLAYER_ACTION_OPEN\020\003\022$\n PL"
    "AYER_ACTION_AUTOWALK_HIGHLIGHT\020\004*\352\005\n\rITE"
    "M_CATEGORY\022\030\n\024ITEM_CATEGORY_ARMORS\020\001\022\031\n\025"
    "ITEM_CATEGORY_AMULETS\020\002\022\027\n\023ITEM_CATEGORY"
    "_BOOTS\020\003\022\034\n\030ITEM_CATEGORY_CONTAINERS\020\004\022\034"
    "\n\030ITEM_CATEGORY_DECORATION\020\005\022\026\n\022ITEM_CAT"
    "EGORY_FOOD\020\006\022\036\n\032ITEM_CATEGORY_HELMETS_HA"
    "TS\020\007\022\026\n\022ITEM_CATEGORY_LEGS\020\010\022\030\n\024ITEM_CAT"
    "EGORY_OTHERS\020\t\022\031\n\025ITEM_CATEGORY_POTIONS\020"
    "\n\022\027\n\023ITEM_CATEGORY_RINGS\020\013\022\027\n\023ITEM_CATEG"
    "ORY_RUNES\020\014\022\031\n\025ITEM_CATEGORY_SHIELDS\020\r\022\027"
    "\n\023ITEM_CATEGORY_TOOLS\020\016\022\033\n\027ITEM_CATEGORY"
    "_VALUABLES\020\017\022\034\n\030ITEM_CATEGORY_AMMUNITION"
    "\020\020\022\026\n\022ITEM_CATEGORY_AXES\020\021\022\027\n\023ITEM_CATEG"
    "ORY_CLUBS\020\022\022\"\n\036ITEM_CATEGORY_DISTANCE_WE"
    "APONS\020\023\022\030\n\024ITEM_CATEGORY_SWORDS\020\024\022\034\n\030ITE"
    "M_CATEGORY_WANDS_RODS\020\025\022!\n\035ITEM_CATEGORY"
    "_PREMIUM_SCROLLS\020\026\022\035\n\031ITEM_CATEGORY_TIBI"
    "A_COINS\020\027\022#\n\037ITEM_CATEGORY_CREATURE_PROD"
    "UCTS\020\030\022\030\n\024ITEM_CATEGORY_QUIVER\020\031\022\033\n\027ITEM"
    "_CATEGORY_SOULCORES\020\032*\355\001\n\021PLAYER_PROFESS"
    "ION\022\"\n\025PLAYER_PROFESSION_ANY\020\377\377\377\377\377\377\377\377\377\001\022"
    "\032\n\026PLAYER_PROFESSION_NONE\020\000\022\034\n\030PLAYER_PR"
    "OFESSION_KNIGHT\020\001\022\035\n\031PLAYER_PROFESSION_P"
    "ALADIN\020\002\022\036\n\032PLAYER_PROFESSION_SORCERER\020\003"
    "\022\033\n\027PLAYER_PROFESSION_DRUID\020\004\022\036\n\032PLAYER_"
    "PROFESSION_PROMOTED\020\n*\203\001\n\023ANIMATION_LOOP"
    "_TYPE\022)\n\034ANIMATION_LOOP_TYPE_PINGPONG\020\377\377"
    "\377\377\377\377\377\377\377\001\022 \n\034ANIMATION_LOOP_TYPE_INFINITE"
    "\020\000\022\037\n\033ANIMATION_LOOP_TYPE_COUNTED\020\001*4\n\tH"
    "OOK_TYPE\022\023\n\017HOOK_TYPE_SOUTH\020\001\022\022\n\016HOOK_TY"
    "PE_EAST\020\002*\337\001\n\013WEAPON_TYPE\022\030\n\024WEAPON_TYPE"
    "_NOWEAPON\020\000\022\025\n\021WEAPON_TYPE_SWORD\020\001\022\023\n\017WE"
    "APON_TYPE_AXE\020\002\022\024\n\020WEAPON_TYPE_CLUB\020\003\022\024\n"
    "\020WEAPON_TYPE_FIST\020\004\022\023\n\017WEAPON_TYPE_BOW\020\005"
    "\022\030\n\024WEAPON_TYPE_CROSSBOW\020\006\022\030\n\024WEAPON_TYP"
    "E_WAND_ROD\020\007\022\025\n\021WEAPON_TYPE_THROW\020\010*\270\001\n\010"
    "VOCATION\022\031\n\014VOCATION_ANY\020\377\377\377\377\377\377\377\377\377\001\022\021\n\rV"
    "OCATION_NONE\020\000\022\023\n\017VOCATION_KNIGHT\020\001\022\024\n\020V"
    "OCATION_PALADIN\020\002\022\025\n\021VOCATION_SORCERER\020\003"
    "\022\022\n\016VOCATION_DRUID\020\004\022\021\n\rVOCATION_MONK\020\005\022"
    "\025\n\021VOCATION_PROMOTED\020\n*\201\001\n\021FIXED_FRAME_G"
    "ROUP\022!\n\035FIXED_FRAME_GROUP_OUTFIT_IDLE\020\000\022"
    "#\n\037FIXED_FRAME_GROUP_OUTFIT_MOVING\020\001\022$\n "
    "FIXED_FRAME_GROUP_OBJECT_INITIAL\020\002"
};
static ::absl::once_flag descriptor_table_appearances_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_appearances_2eproto = {
    false,
    false,
    7154,
    descriptor_table_protodef_appearances_2eproto,
    "appearances.proto",
    &descriptor_table_appearances_2eproto_once,
    nullptr,
    0,
    29,
    schemas,
    file_default_instances,
    TableStruct_appearances_2eproto::offsets,
    file_level_enum_descriptors_appearances_2eproto,
    file_level_service_descriptors_appearances_2eproto,
};
namespace rme {
namespace protobuf {
namespace appearances {
const ::google::protobuf::EnumDescriptor* PLAYER_ACTION_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PLAYER_ACTION_internal_data_[] = {
    327680u, 0u, };
bool PLAYER_ACTION_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* ITEM_CATEGORY_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ITEM_CATEGORY_internal_data_[] = {
    1703937u, 0u, };
bool ITEM_CATEGORY_IsValid(int value) {
  return 1 <= value && value <= 26;
}
const ::google::protobuf::EnumDescriptor* PLAYER_PROFESSION_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t PLAYER_PROFESSION_internal_data_[] = {
    458751u, 32u, 32u, };
bool PLAYER_PROFESSION_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, PLAYER_PROFESSION_internal_data_);
}
const ::google::protobuf::EnumDescriptor* ANIMATION_LOOP_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t ANIMATION_LOOP_TYPE_internal_data_[] = {
    262143u, 0u, };
bool ANIMATION_LOOP_TYPE_IsValid(int value) {
  return -1 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* HOOK_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t HOOK_TYPE_internal_data_[] = {
    131073u, 0u, };
bool HOOK_TYPE_IsValid(int value) {
  return 1 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* WEAPON_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t WEAPON_TYPE_internal_data_[] = {
    589824u, 0u, };
bool WEAPON_TYPE_IsValid(int value) {
  return 0 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* VOCATION_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t VOCATION_internal_data_[] = {
    524287u, 32u, 16u, };
bool VOCATION_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, VOCATION_internal_data_);
}
const ::google::protobuf::EnumDescriptor* FIXED_FRAME_GROUP_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t FIXED_FRAME_GROUP_internal_data_[] = {
    196608u, 0u, };
bool FIXED_FRAME_GROUP_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Coordinate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Coordinate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Coordinate, _impl_._has_bits_);
};

Coordinate::Coordinate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.Coordinate)
}
Coordinate::Coordinate(
    ::google::protobuf::Arena* arena, const Coordinate& from)
    : Coordinate(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Coordinate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Coordinate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Coordinate::~Coordinate() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.Coordinate)
  SharedDtor(*this);
}
inline void Coordinate::SharedDtor(MessageLite& self) {
  Coordinate& this_ = static_cast<Coordinate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Coordinate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Coordinate(arena);
}
constexpr auto Coordinate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Coordinate),
                                            alignof(Coordinate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Coordinate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Coordinate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Coordinate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Coordinate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Coordinate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Coordinate>(), &Coordinate::ByteSizeLong,
            &Coordinate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Coordinate, _impl_._cached_size_),
        false,
    },
    &Coordinate::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Coordinate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Coordinate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Coordinate, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::Coordinate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Coordinate, _impl_.x_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.x_)}},
    // optional uint32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Coordinate, _impl_.y_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.y_)}},
    // optional uint32 z = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Coordinate, _impl_.z_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 z = 3;
    {PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Coordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.Coordinate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.z_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Coordinate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Coordinate& this_ = static_cast<const Coordinate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Coordinate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Coordinate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.Coordinate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 x = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_x(), target);
          }

          // optional uint32 y = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_y(), target);
          }

          // optional uint32 z = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.Coordinate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Coordinate::ByteSizeLong(const MessageLite& base) {
          const Coordinate& this_ = static_cast<const Coordinate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Coordinate::ByteSizeLong() const {
          const Coordinate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.Coordinate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional uint32 x = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_x());
            }
            // optional uint32 y = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_y());
            }
            // optional uint32 z = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_z());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Coordinate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Coordinate*>(&to_msg);
  auto& from = static_cast<const Coordinate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.Coordinate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Coordinate::CopyFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Coordinate::InternalSwap(Coordinate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.z_)
      + sizeof(Coordinate::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Coordinate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Appearances::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Appearances>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Appearances, _impl_._has_bits_);
};

Appearances::Appearances(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.Appearances)
}
inline PROTOBUF_NDEBUG_INLINE Appearances::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rme::protobuf::appearances::Appearances& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        object_{visibility, arena, from.object_},
        outfit_{visibility, arena, from.outfit_},
        effect_{visibility, arena, from.effect_},
        missile_{visibility, arena, from.missile_} {}

Appearances::Appearances(
    ::google::protobuf::Arena* arena,
    const Appearances& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Appearances* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.special_meaning_appearance_ids_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::SpecialMeaningAppearanceIds>(
                              arena, *from._impl_.special_meaning_appearance_ids_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:rme.protobuf.appearances.Appearances)
}
inline PROTOBUF_NDEBUG_INLINE Appearances::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        object_{visibility, arena},
        outfit_{visibility, arena},
        effect_{visibility, arena},
        missile_{visibility, arena} {}

inline void Appearances::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.special_meaning_appearance_ids_ = {};
}
Appearances::~Appearances() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.Appearances)
  SharedDtor(*this);
}
inline void Appearances::SharedDtor(MessageLite& self) {
  Appearances& this_ = static_cast<Appearances&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.special_meaning_appearance_ids_;
  this_._impl_.~Impl_();
}

inline void* Appearances::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Appearances(arena);
}
constexpr auto Appearances::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Appearances, _impl_.object_) +
          decltype(Appearances::_impl_.object_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Appearances, _impl_.outfit_) +
          decltype(Appearances::_impl_.outfit_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Appearances, _impl_.effect_) +
          decltype(Appearances::_impl_.effect_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Appearances, _impl_.missile_) +
          decltype(Appearances::_impl_.missile_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Appearances), alignof(Appearances), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Appearances::PlacementNew_,
                                 sizeof(Appearances),
                                 alignof(Appearances));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Appearances::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Appearances_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Appearances::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Appearances>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Appearances::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Appearances>(), &Appearances::ByteSizeLong,
            &Appearances::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Appearances, _impl_._cached_size_),
        false,
    },
    &Appearances::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Appearances::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> Appearances::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Appearances, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::Appearances>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .rme.protobuf.appearances.Appearance object = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.object_)}},
    // repeated .rme.protobuf.appearances.Appearance outfit = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.outfit_)}},
    // repeated .rme.protobuf.appearances.Appearance effect = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.effect_)}},
    // repeated .rme.protobuf.appearances.Appearance missile = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.missile_)}},
    // optional .rme.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 4, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.special_meaning_appearance_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .rme.protobuf.appearances.Appearance object = 1;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.object_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .rme.protobuf.appearances.Appearance outfit = 2;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.outfit_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .rme.protobuf.appearances.Appearance effect = 3;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.effect_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .rme.protobuf.appearances.Appearance missile = 4;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.missile_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .rme.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.special_meaning_appearance_ids_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::Appearance>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::Appearance>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::Appearance>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::Appearance>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::SpecialMeaningAppearanceIds>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Appearances::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.Appearances)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.object_.Clear();
  _impl_.outfit_.Clear();
  _impl_.effect_.Clear();
  _impl_.missile_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.special_meaning_appearance_ids_ != nullptr);
    _impl_.special_meaning_appearance_ids_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Appearances::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Appearances& this_ = static_cast<const Appearances&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Appearances::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Appearances& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.Appearances)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .rme.protobuf.appearances.Appearance object = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_object_size());
               i < n; i++) {
            const auto& repfield = this_._internal_object().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .rme.protobuf.appearances.Appearance outfit = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outfit_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outfit().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .rme.protobuf.appearances.Appearance effect = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_effect_size());
               i < n; i++) {
            const auto& repfield = this_._internal_effect().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .rme.protobuf.appearances.Appearance missile = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_missile_size());
               i < n; i++) {
            const auto& repfield = this_._internal_missile().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.special_meaning_appearance_ids_, this_._impl_.special_meaning_appearance_ids_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.Appearances)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Appearances::ByteSizeLong(const MessageLite& base) {
          const Appearances& this_ = static_cast<const Appearances&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Appearances::ByteSizeLong() const {
          const Appearances& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.Appearances)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rme.protobuf.appearances.Appearance object = 1;
            {
              total_size += 1UL * this_._internal_object_size();
              for (const auto& msg : this_._internal_object()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .rme.protobuf.appearances.Appearance outfit = 2;
            {
              total_size += 1UL * this_._internal_outfit_size();
              for (const auto& msg : this_._internal_outfit()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .rme.protobuf.appearances.Appearance effect = 3;
            {
              total_size += 1UL * this_._internal_effect_size();
              for (const auto& msg : this_._internal_effect()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .rme.protobuf.appearances.Appearance missile = 4;
            {
              total_size += 1UL * this_._internal_missile_size();
              for (const auto& msg : this_._internal_missile()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // optional .rme.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.special_meaning_appearance_ids_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Appearances::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Appearances*>(&to_msg);
  auto& from = static_cast<const Appearances&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.Appearances)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_object()->MergeFrom(
      from._internal_object());
  _this->_internal_mutable_outfit()->MergeFrom(
      from._internal_outfit());
  _this->_internal_mutable_effect()->MergeFrom(
      from._internal_effect());
  _this->_internal_mutable_missile()->MergeFrom(
      from._internal_missile());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.special_meaning_appearance_ids_ != nullptr);
    if (_this->_impl_.special_meaning_appearance_ids_ == nullptr) {
      _this->_impl_.special_meaning_appearance_ids_ =
          ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::SpecialMeaningAppearanceIds>(arena, *from._impl_.special_meaning_appearance_ids_);
    } else {
      _this->_impl_.special_meaning_appearance_ids_->MergeFrom(*from._impl_.special_meaning_appearance_ids_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Appearances::CopyFrom(const Appearances& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.Appearances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Appearances::InternalSwap(Appearances* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.object_.InternalSwap(&other->_impl_.object_);
  _impl_.outfit_.InternalSwap(&other->_impl_.outfit_);
  _impl_.effect_.InternalSwap(&other->_impl_.effect_);
  _impl_.missile_.InternalSwap(&other->_impl_.missile_);
  swap(_impl_.special_meaning_appearance_ids_, other->_impl_.special_meaning_appearance_ids_);
}

::google::protobuf::Metadata Appearances::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpritePhase::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SpritePhase>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_._has_bits_);
};

SpritePhase::SpritePhase(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.SpritePhase)
}
SpritePhase::SpritePhase(
    ::google::protobuf::Arena* arena, const SpritePhase& from)
    : SpritePhase(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SpritePhase::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SpritePhase::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_min_),
           0,
           offsetof(Impl_, duration_max_) -
               offsetof(Impl_, duration_min_) +
               sizeof(Impl_::duration_max_));
}
SpritePhase::~SpritePhase() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.SpritePhase)
  SharedDtor(*this);
}
inline void SpritePhase::SharedDtor(MessageLite& self) {
  SpritePhase& this_ = static_cast<SpritePhase&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SpritePhase::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SpritePhase(arena);
}
constexpr auto SpritePhase::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SpritePhase),
                                            alignof(SpritePhase));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SpritePhase::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SpritePhase_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SpritePhase::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SpritePhase>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SpritePhase::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SpritePhase>(), &SpritePhase::ByteSizeLong,
            &SpritePhase::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_._cached_size_),
        false,
    },
    &SpritePhase::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SpritePhase::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SpritePhase::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::SpritePhase>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 duration_max = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpritePhase, _impl_.duration_max_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_max_)}},
    // optional uint32 duration_min = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpritePhase, _impl_.duration_min_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 duration_min = 1;
    {PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_min_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 duration_max = 2;
    {PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_max_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SpritePhase::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.SpritePhase)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.duration_min_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.duration_max_) -
        reinterpret_cast<char*>(&_impl_.duration_min_)) + sizeof(_impl_.duration_max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SpritePhase::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SpritePhase& this_ = static_cast<const SpritePhase&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SpritePhase::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SpritePhase& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.SpritePhase)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 duration_min = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_duration_min(), target);
          }

          // optional uint32 duration_max = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_duration_max(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.SpritePhase)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SpritePhase::ByteSizeLong(const MessageLite& base) {
          const SpritePhase& this_ = static_cast<const SpritePhase&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SpritePhase::ByteSizeLong() const {
          const SpritePhase& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.SpritePhase)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional uint32 duration_min = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_duration_min());
            }
            // optional uint32 duration_max = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_duration_max());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SpritePhase::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpritePhase*>(&to_msg);
  auto& from = static_cast<const SpritePhase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.SpritePhase)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.duration_min_ = from._impl_.duration_min_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.duration_max_ = from._impl_.duration_max_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpritePhase::CopyFrom(const SpritePhase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.SpritePhase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpritePhase::InternalSwap(SpritePhase* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_max_)
      + sizeof(SpritePhase::_impl_.duration_max_)
      - PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_min_)>(
          reinterpret_cast<char*>(&_impl_.duration_min_),
          reinterpret_cast<char*>(&other->_impl_.duration_min_));
}

::google::protobuf::Metadata SpritePhase::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpriteAnimation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SpriteAnimation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_._has_bits_);
};

SpriteAnimation::SpriteAnimation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.SpriteAnimation)
}
inline PROTOBUF_NDEBUG_INLINE SpriteAnimation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rme::protobuf::appearances::SpriteAnimation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sprite_phase_{visibility, arena, from.sprite_phase_} {}

SpriteAnimation::SpriteAnimation(
    ::google::protobuf::Arena* arena,
    const SpriteAnimation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpriteAnimation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default_start_phase_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, default_start_phase_),
           offsetof(Impl_, loop_type_) -
               offsetof(Impl_, default_start_phase_) +
               sizeof(Impl_::loop_type_));

  // @@protoc_insertion_point(copy_constructor:rme.protobuf.appearances.SpriteAnimation)
}
inline PROTOBUF_NDEBUG_INLINE SpriteAnimation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sprite_phase_{visibility, arena},
        loop_type_{static_cast< ::rme::protobuf::appearances::ANIMATION_LOOP_TYPE >(-1)} {}

inline void SpriteAnimation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default_start_phase_),
           0,
           offsetof(Impl_, loop_count_) -
               offsetof(Impl_, default_start_phase_) +
               sizeof(Impl_::loop_count_));
}
SpriteAnimation::~SpriteAnimation() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.SpriteAnimation)
  SharedDtor(*this);
}
inline void SpriteAnimation::SharedDtor(MessageLite& self) {
  SpriteAnimation& this_ = static_cast<SpriteAnimation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SpriteAnimation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SpriteAnimation(arena);
}
constexpr auto SpriteAnimation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.sprite_phase_) +
          decltype(SpriteAnimation::_impl_.sprite_phase_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SpriteAnimation), alignof(SpriteAnimation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SpriteAnimation::PlacementNew_,
                                 sizeof(SpriteAnimation),
                                 alignof(SpriteAnimation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SpriteAnimation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SpriteAnimation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SpriteAnimation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SpriteAnimation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SpriteAnimation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SpriteAnimation>(), &SpriteAnimation::ByteSizeLong,
            &SpriteAnimation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_._cached_size_),
        false,
    },
    &SpriteAnimation::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SpriteAnimation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> SpriteAnimation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::SpriteAnimation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 default_start_phase = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteAnimation, _impl_.default_start_phase_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.default_start_phase_)}},
    // optional bool synchronized = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SpriteAnimation, _impl_.synchronized_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.synchronized_)}},
    // optional bool random_start_phase = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SpriteAnimation, _impl_.random_start_phase_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.random_start_phase_)}},
    // optional .rme.protobuf.appearances.ANIMATION_LOOP_TYPE loop_type = 4;
    {::_pbi::TcParser::FastErS1,
     {32, 4, 1, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_type_)}},
    // optional uint32 loop_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteAnimation, _impl_.loop_count_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_count_)}},
    // repeated .rme.protobuf.appearances.SpritePhase sprite_phase = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.sprite_phase_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 default_start_phase = 1;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.default_start_phase_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool synchronized = 2;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.synchronized_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool random_start_phase = 3;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.random_start_phase_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.ANIMATION_LOOP_TYPE loop_type = 4;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_type_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 loop_count = 5;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_count_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .rme.protobuf.appearances.SpritePhase sprite_phase = 6;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.sprite_phase_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::SpritePhase>()},
    {-1, 3},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SpriteAnimation::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.SpriteAnimation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sprite_phase_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.default_start_phase_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.loop_count_) -
        reinterpret_cast<char*>(&_impl_.default_start_phase_)) + sizeof(_impl_.loop_count_));
    _impl_.loop_type_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SpriteAnimation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SpriteAnimation& this_ = static_cast<const SpriteAnimation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SpriteAnimation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SpriteAnimation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.SpriteAnimation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 default_start_phase = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_default_start_phase(), target);
          }

          // optional bool synchronized = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_synchronized(), target);
          }

          // optional bool random_start_phase = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_random_start_phase(), target);
          }

          // optional .rme.protobuf.appearances.ANIMATION_LOOP_TYPE loop_type = 4;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_loop_type(), target);
          }

          // optional uint32 loop_count = 5;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_loop_count(), target);
          }

          // repeated .rme.protobuf.appearances.SpritePhase sprite_phase = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_sprite_phase_size());
               i < n; i++) {
            const auto& repfield = this_._internal_sprite_phase().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.SpriteAnimation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SpriteAnimation::ByteSizeLong(const MessageLite& base) {
          const SpriteAnimation& this_ = static_cast<const SpriteAnimation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SpriteAnimation::ByteSizeLong() const {
          const SpriteAnimation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.SpriteAnimation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rme.protobuf.appearances.SpritePhase sprite_phase = 6;
            {
              total_size += 1UL * this_._internal_sprite_phase_size();
              for (const auto& msg : this_._internal_sprite_phase()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // optional uint32 default_start_phase = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_default_start_phase());
            }
            // optional bool synchronized = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2;
            }
            // optional bool random_start_phase = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2;
            }
            // optional uint32 loop_count = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_loop_count());
            }
            // optional .rme.protobuf.appearances.ANIMATION_LOOP_TYPE loop_type = 4;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_loop_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SpriteAnimation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpriteAnimation*>(&to_msg);
  auto& from = static_cast<const SpriteAnimation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.SpriteAnimation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sprite_phase()->MergeFrom(
      from._internal_sprite_phase());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.default_start_phase_ = from._impl_.default_start_phase_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.synchronized_ = from._impl_.synchronized_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.random_start_phase_ = from._impl_.random_start_phase_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.loop_count_ = from._impl_.loop_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.loop_type_ = from._impl_.loop_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpriteAnimation::CopyFrom(const SpriteAnimation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.SpriteAnimation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpriteAnimation::InternalSwap(SpriteAnimation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sprite_phase_.InternalSwap(&other->_impl_.sprite_phase_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_type_)
      + sizeof(SpriteAnimation::_impl_.loop_type_)
      - PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.default_start_phase_)>(
          reinterpret_cast<char*>(&_impl_.default_start_phase_),
          reinterpret_cast<char*>(&other->_impl_.default_start_phase_));
}

::google::protobuf::Metadata SpriteAnimation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Box::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Box>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Box, _impl_._has_bits_);
};

Box::Box(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.Box)
}
Box::Box(
    ::google::protobuf::Arena* arena, const Box& from)
    : Box(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Box::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Box::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::height_));
}
Box::~Box() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.Box)
  SharedDtor(*this);
}
inline void Box::SharedDtor(MessageLite& self) {
  Box& this_ = static_cast<Box&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Box::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Box(arena);
}
constexpr auto Box::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Box),
                                            alignof(Box));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Box::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Box_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Box::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Box>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Box::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Box>(), &Box::ByteSizeLong,
            &Box::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Box, _impl_._cached_size_),
        false,
    },
    &Box::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Box::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Box::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Box, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::Box>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 height = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Box, _impl_.height_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Box, _impl_.height_)}},
    // optional uint32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Box, _impl_.x_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Box, _impl_.x_)}},
    // optional uint32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Box, _impl_.y_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Box, _impl_.y_)}},
    // optional uint32 width = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Box, _impl_.width_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Box, _impl_.width_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 width = 3;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.width_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 height = 4;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.height_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Box::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.Box)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.height_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.height_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Box::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Box& this_ = static_cast<const Box&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Box::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Box& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.Box)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 x = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_x(), target);
          }

          // optional uint32 y = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_y(), target);
          }

          // optional uint32 width = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_width(), target);
          }

          // optional uint32 height = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_height(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.Box)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Box::ByteSizeLong(const MessageLite& base) {
          const Box& this_ = static_cast<const Box&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Box::ByteSizeLong() const {
          const Box& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.Box)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional uint32 x = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_x());
            }
            // optional uint32 y = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_y());
            }
            // optional uint32 width = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_width());
            }
            // optional uint32 height = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Box::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Box*>(&to_msg);
  auto& from = static_cast<const Box&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.Box)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Box::CopyFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Box::InternalSwap(Box* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Box, _impl_.height_)
      + sizeof(Box::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(Box, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Box::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpriteInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SpriteInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_._has_bits_);
};

SpriteInfo::SpriteInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.SpriteInfo)
}
inline PROTOBUF_NDEBUG_INLINE SpriteInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rme::protobuf::appearances::SpriteInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sprite_id_{visibility, arena, from.sprite_id_},
        bounding_box_per_direction_{visibility, arena, from.bounding_box_per_direction_} {}

SpriteInfo::SpriteInfo(
    ::google::protobuf::Arena* arena,
    const SpriteInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpriteInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.animation_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::SpriteAnimation>(
                              arena, *from._impl_.animation_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pattern_width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pattern_width_),
           offsetof(Impl_, is_opaque_) -
               offsetof(Impl_, pattern_width_) +
               sizeof(Impl_::is_opaque_));

  // @@protoc_insertion_point(copy_constructor:rme.protobuf.appearances.SpriteInfo)
}
inline PROTOBUF_NDEBUG_INLINE SpriteInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sprite_id_{visibility, arena},
        bounding_box_per_direction_{visibility, arena} {}

inline void SpriteInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, animation_),
           0,
           offsetof(Impl_, is_opaque_) -
               offsetof(Impl_, animation_) +
               sizeof(Impl_::is_opaque_));
}
SpriteInfo::~SpriteInfo() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.SpriteInfo)
  SharedDtor(*this);
}
inline void SpriteInfo::SharedDtor(MessageLite& self) {
  SpriteInfo& this_ = static_cast<SpriteInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.animation_;
  this_._impl_.~Impl_();
}

inline void* SpriteInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SpriteInfo(arena);
}
constexpr auto SpriteInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.sprite_id_) +
          decltype(SpriteInfo::_impl_.sprite_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.bounding_box_per_direction_) +
          decltype(SpriteInfo::_impl_.bounding_box_per_direction_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SpriteInfo), alignof(SpriteInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SpriteInfo::PlacementNew_,
                                 sizeof(SpriteInfo),
                                 alignof(SpriteInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SpriteInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SpriteInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SpriteInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SpriteInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SpriteInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SpriteInfo>(), &SpriteInfo::ByteSizeLong,
            &SpriteInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_._cached_size_),
        false,
    },
    &SpriteInfo::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SpriteInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 0, 2> SpriteInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::SpriteInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 pattern_width = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.pattern_width_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_width_)}},
    // optional uint32 pattern_height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.pattern_height_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_height_)}},
    // optional uint32 pattern_depth = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.pattern_depth_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_depth_)}},
    // optional uint32 layers = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.layers_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.layers_)}},
    // repeated uint32 sprite_id = 5;
    {::_pbi::TcParser::FastV32R1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.sprite_id_)}},
    // optional .rme.protobuf.appearances.SpriteAnimation animation = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.animation_)}},
    // optional uint32 bounding_square = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.bounding_square_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.bounding_square_)}},
    // optional bool is_opaque = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SpriteInfo, _impl_.is_opaque_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.is_opaque_)}},
    // repeated .rme.protobuf.appearances.Box bounding_box_per_direction = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.bounding_box_per_direction_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 pattern_width = 1;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_width_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 pattern_height = 2;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_height_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 pattern_depth = 3;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_depth_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 layers = 4;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.layers_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 sprite_id = 5;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.sprite_id_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional .rme.protobuf.appearances.SpriteAnimation animation = 6;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.animation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 bounding_square = 7;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.bounding_square_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool is_opaque = 8;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.is_opaque_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .rme.protobuf.appearances.Box bounding_box_per_direction = 9;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.bounding_box_per_direction_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::SpriteAnimation>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::Box>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SpriteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.SpriteInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sprite_id_.Clear();
  _impl_.bounding_box_per_direction_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.animation_ != nullptr);
    _impl_.animation_->Clear();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&_impl_.pattern_width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_opaque_) -
        reinterpret_cast<char*>(&_impl_.pattern_width_)) + sizeof(_impl_.is_opaque_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SpriteInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SpriteInfo& this_ = static_cast<const SpriteInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SpriteInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SpriteInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.SpriteInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 pattern_width = 1;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_pattern_width(), target);
          }

          // optional uint32 pattern_height = 2;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_pattern_height(), target);
          }

          // optional uint32 pattern_depth = 3;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_pattern_depth(), target);
          }

          // optional uint32 layers = 4;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_layers(), target);
          }

          // repeated uint32 sprite_id = 5;
          for (int i = 0, n = this_._internal_sprite_id_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_sprite_id().Get(i), target);
          }

          // optional .rme.protobuf.appearances.SpriteAnimation animation = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.animation_, this_._impl_.animation_->GetCachedSize(), target,
                stream);
          }

          // optional uint32 bounding_square = 7;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_bounding_square(), target);
          }

          // optional bool is_opaque = 8;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_is_opaque(), target);
          }

          // repeated .rme.protobuf.appearances.Box bounding_box_per_direction = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_bounding_box_per_direction_size());
               i < n; i++) {
            const auto& repfield = this_._internal_bounding_box_per_direction().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.SpriteInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SpriteInfo::ByteSizeLong(const MessageLite& base) {
          const SpriteInfo& this_ = static_cast<const SpriteInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SpriteInfo::ByteSizeLong() const {
          const SpriteInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.SpriteInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 sprite_id = 5;
            {
              std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
                  this_._internal_sprite_id());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_sprite_id_size());
              total_size += tag_size + data_size;
            }
            // repeated .rme.protobuf.appearances.Box bounding_box_per_direction = 9;
            {
              total_size += 1UL * this_._internal_bounding_box_per_direction_size();
              for (const auto& msg : this_._internal_bounding_box_per_direction()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // optional .rme.protobuf.appearances.SpriteAnimation animation = 6;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.animation_);
            }
            // optional uint32 pattern_width = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_pattern_width());
            }
            // optional uint32 pattern_height = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_pattern_height());
            }
            // optional uint32 pattern_depth = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_pattern_depth());
            }
            // optional uint32 layers = 4;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_layers());
            }
            // optional uint32 bounding_square = 7;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bounding_square());
            }
            // optional bool is_opaque = 8;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SpriteInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpriteInfo*>(&to_msg);
  auto& from = static_cast<const SpriteInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.SpriteInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sprite_id()->MergeFrom(from._internal_sprite_id());
  _this->_internal_mutable_bounding_box_per_direction()->MergeFrom(
      from._internal_bounding_box_per_direction());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.animation_ != nullptr);
      if (_this->_impl_.animation_ == nullptr) {
        _this->_impl_.animation_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::SpriteAnimation>(arena, *from._impl_.animation_);
      } else {
        _this->_impl_.animation_->MergeFrom(*from._impl_.animation_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.pattern_width_ = from._impl_.pattern_width_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.pattern_height_ = from._impl_.pattern_height_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.pattern_depth_ = from._impl_.pattern_depth_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.layers_ = from._impl_.layers_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.bounding_square_ = from._impl_.bounding_square_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.is_opaque_ = from._impl_.is_opaque_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpriteInfo::CopyFrom(const SpriteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.SpriteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpriteInfo::InternalSwap(SpriteInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sprite_id_.InternalSwap(&other->_impl_.sprite_id_);
  _impl_.bounding_box_per_direction_.InternalSwap(&other->_impl_.bounding_box_per_direction_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.is_opaque_)
      + sizeof(SpriteInfo::_impl_.is_opaque_)
      - PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.animation_)>(
          reinterpret_cast<char*>(&_impl_.animation_),
          reinterpret_cast<char*>(&other->_impl_.animation_));
}

::google::protobuf::Metadata SpriteInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FrameGroup::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FrameGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_._has_bits_);
};

FrameGroup::FrameGroup(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.FrameGroup)
}
inline PROTOBUF_NDEBUG_INLINE FrameGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rme::protobuf::appearances::FrameGroup& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FrameGroup::FrameGroup(
    ::google::protobuf::Arena* arena,
    const FrameGroup& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FrameGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sprite_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::SpriteInfo>(
                              arena, *from._impl_.sprite_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fixed_frame_group_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fixed_frame_group_),
           offsetof(Impl_, id_) -
               offsetof(Impl_, fixed_frame_group_) +
               sizeof(Impl_::id_));

  // @@protoc_insertion_point(copy_constructor:rme.protobuf.appearances.FrameGroup)
}
inline PROTOBUF_NDEBUG_INLINE FrameGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FrameGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sprite_info_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, sprite_info_) +
               sizeof(Impl_::id_));
}
FrameGroup::~FrameGroup() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.FrameGroup)
  SharedDtor(*this);
}
inline void FrameGroup::SharedDtor(MessageLite& self) {
  FrameGroup& this_ = static_cast<FrameGroup&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.sprite_info_;
  this_._impl_.~Impl_();
}

inline void* FrameGroup::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FrameGroup(arena);
}
constexpr auto FrameGroup::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FrameGroup),
                                            alignof(FrameGroup));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FrameGroup::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FrameGroup_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FrameGroup::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FrameGroup>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FrameGroup::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FrameGroup>(), &FrameGroup::ByteSizeLong,
            &FrameGroup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_._cached_size_),
        false,
    },
    &FrameGroup::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FrameGroup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> FrameGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::FrameGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .rme.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 1, 2, PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.fixed_frame_group_)}},
    // optional uint32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FrameGroup, _impl_.id_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.id_)}},
    // optional .rme.protobuf.appearances.SpriteInfo sprite_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.sprite_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .rme.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
    {PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.fixed_frame_group_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 id = 2;
    {PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .rme.protobuf.appearances.SpriteInfo sprite_info = 3;
    {PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.sprite_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::SpriteInfo>()},
    {0, 3},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FrameGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.FrameGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.sprite_info_ != nullptr);
    _impl_.sprite_info_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.fixed_frame_group_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.id_) -
        reinterpret_cast<char*>(&_impl_.fixed_frame_group_)) + sizeof(_impl_.id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FrameGroup::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FrameGroup& this_ = static_cast<const FrameGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FrameGroup::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FrameGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.FrameGroup)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_fixed_frame_group(), target);
          }

          // optional uint32 id = 2;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_id(), target);
          }

          // optional .rme.protobuf.appearances.SpriteInfo sprite_info = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.sprite_info_, this_._impl_.sprite_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.FrameGroup)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FrameGroup::ByteSizeLong(const MessageLite& base) {
          const FrameGroup& this_ = static_cast<const FrameGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FrameGroup::ByteSizeLong() const {
          const FrameGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.FrameGroup)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional .rme.protobuf.appearances.SpriteInfo sprite_info = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sprite_info_);
            }
            // optional .rme.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_fixed_frame_group());
            }
            // optional uint32 id = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FrameGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrameGroup*>(&to_msg);
  auto& from = static_cast<const FrameGroup&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.FrameGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.sprite_info_ != nullptr);
      if (_this->_impl_.sprite_info_ == nullptr) {
        _this->_impl_.sprite_info_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::SpriteInfo>(arena, *from._impl_.sprite_info_);
      } else {
        _this->_impl_.sprite_info_->MergeFrom(*from._impl_.sprite_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.fixed_frame_group_ = from._impl_.fixed_frame_group_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrameGroup::CopyFrom(const FrameGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.FrameGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FrameGroup::InternalSwap(FrameGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.id_)
      + sizeof(FrameGroup::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.sprite_info_)>(
          reinterpret_cast<char*>(&_impl_.sprite_info_),
          reinterpret_cast<char*>(&other->_impl_.sprite_info_));
}

::google::protobuf::Metadata FrameGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Appearance::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Appearance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Appearance, _impl_._has_bits_);
};

Appearance::Appearance(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.Appearance)
}
inline PROTOBUF_NDEBUG_INLINE Appearance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rme::protobuf::appearances::Appearance& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        frame_group_{visibility, arena, from.frame_group_},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

Appearance::Appearance(
    ::google::protobuf::Arena* arena,
    const Appearance& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Appearance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.flags_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlags>(
                              arena, *from._impl_.flags_)
                        : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:rme.protobuf.appearances.Appearance)
}
inline PROTOBUF_NDEBUG_INLINE Appearance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        frame_group_{visibility, arena},
        name_(arena),
        description_(arena) {}

inline void Appearance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, flags_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, flags_) +
               sizeof(Impl_::id_));
}
Appearance::~Appearance() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.Appearance)
  SharedDtor(*this);
}
inline void Appearance::SharedDtor(MessageLite& self) {
  Appearance& this_ = static_cast<Appearance&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.flags_;
  this_._impl_.~Impl_();
}

inline void* Appearance::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Appearance(arena);
}
constexpr auto Appearance::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Appearance, _impl_.frame_group_) +
          decltype(Appearance::_impl_.frame_group_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Appearance), alignof(Appearance), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Appearance::PlacementNew_,
                                 sizeof(Appearance),
                                 alignof(Appearance));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Appearance::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Appearance_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Appearance::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Appearance>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Appearance::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Appearance>(), &Appearance::ByteSizeLong,
            &Appearance::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Appearance, _impl_._cached_size_),
        false,
    },
    &Appearance::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Appearance::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> Appearance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Appearance, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::Appearance>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Appearance, _impl_.id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.id_)}},
    // repeated .rme.protobuf.appearances.FrameGroup frame_group = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.frame_group_)}},
    // optional .rme.protobuf.appearances.AppearanceFlags flags = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.flags_)}},
    // optional bytes name = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.name_)}},
    // optional bytes description = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .rme.protobuf.appearances.FrameGroup frame_group = 2;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.frame_group_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .rme.protobuf.appearances.AppearanceFlags flags = 3;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.flags_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes name = 4;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes description = 5;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.description_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::FrameGroup>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlags>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Appearance::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.Appearance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.frame_group_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.flags_ != nullptr);
      _impl_.flags_->Clear();
    }
  }
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Appearance::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Appearance& this_ = static_cast<const Appearance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Appearance::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Appearance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.Appearance)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 id = 1;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // repeated .rme.protobuf.appearances.FrameGroup frame_group = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_frame_group_size());
               i < n; i++) {
            const auto& repfield = this_._internal_frame_group().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional .rme.protobuf.appearances.AppearanceFlags flags = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.flags_, this_._impl_.flags_->GetCachedSize(), target,
                stream);
          }

          // optional bytes name = 4;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // optional bytes description = 5;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_description();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.Appearance)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Appearance::ByteSizeLong(const MessageLite& base) {
          const Appearance& this_ = static_cast<const Appearance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Appearance::ByteSizeLong() const {
          const Appearance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.Appearance)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rme.protobuf.appearances.FrameGroup frame_group = 2;
            {
              total_size += 1UL * this_._internal_frame_group_size();
              for (const auto& msg : this_._internal_frame_group()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional bytes name = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_name());
            }
            // optional bytes description = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_description());
            }
            // optional .rme.protobuf.appearances.AppearanceFlags flags = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.flags_);
            }
            // optional uint32 id = 1;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Appearance::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Appearance*>(&to_msg);
  auto& from = static_cast<const Appearance&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.Appearance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_frame_group()->MergeFrom(
      from._internal_frame_group());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.flags_ != nullptr);
      if (_this->_impl_.flags_ == nullptr) {
        _this->_impl_.flags_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlags>(arena, *from._impl_.flags_);
      } else {
        _this->_impl_.flags_->MergeFrom(*from._impl_.flags_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Appearance::CopyFrom(const Appearance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.Appearance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Appearance::InternalSwap(Appearance* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.frame_group_.InternalSwap(&other->_impl_.frame_group_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Appearance, _impl_.id_)
      + sizeof(Appearance::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Appearance, _impl_.flags_)>(
          reinterpret_cast<char*>(&_impl_.flags_),
          reinterpret_cast<char*>(&other->_impl_.flags_));
}

::google::protobuf::Metadata Appearance::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlags::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlags>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_._has_bits_);
};

AppearanceFlags::AppearanceFlags(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlags)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlags::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rme::protobuf::appearances::AppearanceFlags& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        npcsaledata_{visibility, arena, from.npcsaledata_},
        restrict_to_vocation_{visibility, arena, from.restrict_to_vocation_} {}

AppearanceFlags::AppearanceFlags(
    ::google::protobuf::Arena* arena,
    const AppearanceFlags& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AppearanceFlags* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bank_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagBank>(
                              arena, *from._impl_.bank_)
                        : nullptr;
  _impl_.write_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagWrite>(
                              arena, *from._impl_.write_)
                        : nullptr;
  _impl_.write_once_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagWriteOnce>(
                              arena, *from._impl_.write_once_)
                        : nullptr;
  _impl_.hook_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagHook>(
                              arena, *from._impl_.hook_)
                        : nullptr;
  _impl_.light_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagLight>(
                              arena, *from._impl_.light_)
                        : nullptr;
  _impl_.shift_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagShift>(
                              arena, *from._impl_.shift_)
                        : nullptr;
  _impl_.height_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagHeight>(
                              arena, *from._impl_.height_)
                        : nullptr;
  _impl_.automap_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagAutomap>(
                              arena, *from._impl_.automap_)
                        : nullptr;
  _impl_.lenshelp_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagLenshelp>(
                              arena, *from._impl_.lenshelp_)
                        : nullptr;
  _impl_.clothes_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagClothes>(
                              arena, *from._impl_.clothes_)
                        : nullptr;
  _impl_.default_action_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagDefaultAction>(
                              arena, *from._impl_.default_action_)
                        : nullptr;
  _impl_.market_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagMarket>(
                              arena, *from._impl_.market_)
                        : nullptr;
  _impl_.changedtoexpire_ = (cached_has_bits & 0x00001000u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagChangedToExpire>(
                              arena, *from._impl_.changedtoexpire_)
                        : nullptr;
  _impl_.cyclopediaitem_ = (cached_has_bits & 0x00002000u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagCyclopedia>(
                              arena, *from._impl_.cyclopediaitem_)
                        : nullptr;
  _impl_.upgradeclassification_ = (cached_has_bits & 0x00004000u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagUpgradeClassification>(
                              arena, *from._impl_.upgradeclassification_)
                        : nullptr;
  _impl_.skillwheel_gem_ = (cached_has_bits & 0x00008000u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagSkillWheelGem>(
                              arena, *from._impl_.skillwheel_gem_)
                        : nullptr;
  _impl_.imbueable_ = (cached_has_bits & 0x00010000u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagImbueable>(
                              arena, *from._impl_.imbueable_)
                        : nullptr;
  _impl_.proficiency_ = (cached_has_bits & 0x00020000u) ? ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagProficiency>(
                              arena, *from._impl_.proficiency_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, clip_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, clip_),
           offsetof(Impl_, weapon_type_) -
               offsetof(Impl_, clip_) +
               sizeof(Impl_::weapon_type_));

  // @@protoc_insertion_point(copy_constructor:rme.protobuf.appearances.AppearanceFlags)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlags::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        npcsaledata_{visibility, arena},
        restrict_to_vocation_{visibility, arena} {}

inline void AppearanceFlags::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bank_),
           0,
           offsetof(Impl_, weapon_type_) -
               offsetof(Impl_, bank_) +
               sizeof(Impl_::weapon_type_));
}
AppearanceFlags::~AppearanceFlags() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlags)
  SharedDtor(*this);
}
inline void AppearanceFlags::SharedDtor(MessageLite& self) {
  AppearanceFlags& this_ = static_cast<AppearanceFlags&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.bank_;
  delete this_._impl_.write_;
  delete this_._impl_.write_once_;
  delete this_._impl_.hook_;
  delete this_._impl_.light_;
  delete this_._impl_.shift_;
  delete this_._impl_.height_;
  delete this_._impl_.automap_;
  delete this_._impl_.lenshelp_;
  delete this_._impl_.clothes_;
  delete this_._impl_.default_action_;
  delete this_._impl_.market_;
  delete this_._impl_.changedtoexpire_;
  delete this_._impl_.cyclopediaitem_;
  delete this_._impl_.upgradeclassification_;
  delete this_._impl_.skillwheel_gem_;
  delete this_._impl_.imbueable_;
  delete this_._impl_.proficiency_;
  this_._impl_.~Impl_();
}

inline void* AppearanceFlags::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlags(arena);
}
constexpr auto AppearanceFlags::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.npcsaledata_) +
          decltype(AppearanceFlags::_impl_.npcsaledata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.restrict_to_vocation_) +
          decltype(AppearanceFlags::_impl_.restrict_to_vocation_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AppearanceFlags), alignof(AppearanceFlags), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AppearanceFlags::PlacementNew_,
                                 sizeof(AppearanceFlags),
                                 alignof(AppearanceFlags));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlags::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlags_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlags::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlags>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlags::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlags>(), &AppearanceFlags::ByteSizeLong,
            &AppearanceFlags::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_._cached_size_),
        false,
    },
    &AppearanceFlags::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlags::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 64, 21, 0, 9> AppearanceFlags::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_._has_bits_),
    0, // no _extensions_
    64, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    64,  // num_field_entries
    21,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlags>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .rme.protobuf.appearances.AppearanceFlagBank bank = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bank_)}},
    // optional bool clip = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.clip_), 18>(),
     {16, 18, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.clip_)}},
    // optional bool bottom = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.bottom_), 19>(),
     {24, 19, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bottom_)}},
    // optional bool top = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.top_), 20>(),
     {32, 20, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.top_)}},
    // optional bool container = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.container_), 21>(),
     {40, 21, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.container_)}},
    // optional bool cumulative = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.cumulative_), 22>(),
     {48, 22, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.cumulative_)}},
    // optional bool usable = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.usable_), 23>(),
     {56, 23, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.usable_)}},
    // optional bool forceuse = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.forceuse_), 24>(),
     {64, 24, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.forceuse_)}},
    // optional bool multiuse = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.multiuse_), 25>(),
     {72, 25, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.multiuse_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagWrite write = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 1, 1, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.write_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 2, 2, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.write_once_)}},
    // optional bool liquidpool = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.liquidpool_), 26>(),
     {96, 26, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.liquidpool_)}},
    // optional bool unpass = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.unpass_), 27>(),
     {104, 27, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unpass_)}},
    // optional bool unmove = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.unmove_), 28>(),
     {112, 28, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unmove_)}},
    // optional bool unsight = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.unsight_), 29>(),
     {120, 29, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unsight_)}},
    // optional bool avoid = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 30, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.avoid_)}},
    // optional bool no_movement_animation = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 31, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.no_movement_animation_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagClothes clothes = 34;
    {::_pbi::TcParser::FastMtS2,
     {658, 9, 9, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.clothes_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagDefaultAction default_action = 35;
    {::_pbi::TcParser::FastMtS2,
     {666, 10, 10, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.default_action_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagMarket market = 36;
    {::_pbi::TcParser::FastMtS2,
     {674, 11, 11, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.market_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagHook hook = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 3, 3, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.hook_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .rme.protobuf.appearances.AppearanceFlagLight light = 23;
    {::_pbi::TcParser::FastMtS2,
     {442, 4, 4, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.light_)}},
    // repeated .rme.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
    {::_pbi::TcParser::FastMtR2,
     {706, 63, 12, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.npcsaledata_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
    {::_pbi::TcParser::FastMtS2,
     {714, 12, 13, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.changedtoexpire_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagShift shift = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 5, 5, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.shift_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagHeight height = 27;
    {::_pbi::TcParser::FastMtS2,
     {474, 6, 6, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.height_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
    {::_pbi::TcParser::FastMtS2,
     {738, 13, 14, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.cyclopediaitem_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagProficiency proficiency = 61;
    {::_pbi::TcParser::FastMtS2,
     {1002, 17, 18, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.proficiency_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagAutomap automap = 30;
    {::_pbi::TcParser::FastMtS2,
     {498, 7, 7, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.automap_)}},
    // optional .rme.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
    {::_pbi::TcParser::FastMtS2,
     {506, 8, 8, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.lenshelp_)}},
  }}, {{
    33, 0, 2,
    0, 32, 0, 48,
    65535, 65535
  }}, {{
    // optional .rme.protobuf.appearances.AppearanceFlagBank bank = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bank_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool clip = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.clip_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool bottom = 3;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bottom_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool top = 4;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.top_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool container = 5;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.container_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool cumulative = 6;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.cumulative_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool usable = 7;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.usable_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool forceuse = 8;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.forceuse_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool multiuse = 9;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.multiuse_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagWrite write = 10;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.write_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .rme.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.write_once_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool liquidpool = 12;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.liquidpool_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool unpass = 13;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unpass_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool unmove = 14;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unmove_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool unsight = 15;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unsight_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool avoid = 16;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.avoid_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool no_movement_animation = 17;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.no_movement_animation_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool take = 18;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.take_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool liquidcontainer = 19;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.liquidcontainer_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool hang = 20;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.hang_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagHook hook = 21;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.hook_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool rotate = 22;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.rotate_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagLight light = 23;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.light_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool dont_hide = 24;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.dont_hide_), _Internal::kHasBitsOffset + 36, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool translucent = 25;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.translucent_), _Internal::kHasBitsOffset + 37, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagShift shift = 26;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.shift_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .rme.protobuf.appearances.AppearanceFlagHeight height = 27;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.height_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool lying_object = 28;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.lying_object_), _Internal::kHasBitsOffset + 38, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool animate_always = 29;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.animate_always_), _Internal::kHasBitsOffset + 39, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagAutomap automap = 30;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.automap_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .rme.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.lenshelp_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool fullbank = 32;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.fullbank_), _Internal::kHasBitsOffset + 40, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool ignore_look = 33;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.ignore_look_), _Internal::kHasBitsOffset + 41, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagClothes clothes = 34;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.clothes_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .rme.protobuf.appearances.AppearanceFlagDefaultAction default_action = 35;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.default_action_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .rme.protobuf.appearances.AppearanceFlagMarket market = 36;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.market_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool wrap = 37;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.wrap_), _Internal::kHasBitsOffset + 42, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool unwrap = 38;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unwrap_), _Internal::kHasBitsOffset + 43, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool topeffect = 39;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.topeffect_), _Internal::kHasBitsOffset + 44, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .rme.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.npcsaledata_), -1, 12,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .rme.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.changedtoexpire_), _Internal::kHasBitsOffset + 12, 13,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool corpse = 42;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.corpse_), _Internal::kHasBitsOffset + 45, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool player_corpse = 43;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.player_corpse_), _Internal::kHasBitsOffset + 46, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.cyclopediaitem_), _Internal::kHasBitsOffset + 13, 14,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool ammo = 45;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.ammo_), _Internal::kHasBitsOffset + 47, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool show_off_socket = 46;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.show_off_socket_), _Internal::kHasBitsOffset + 48, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool reportable = 47;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reportable_), _Internal::kHasBitsOffset + 49, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagUpgradeClassification upgradeclassification = 48;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.upgradeclassification_), _Internal::kHasBitsOffset + 14, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool reverse_addons_east = 49;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reverse_addons_east_), _Internal::kHasBitsOffset + 50, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool reverse_addons_west = 50;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reverse_addons_west_), _Internal::kHasBitsOffset + 51, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool reverse_addons_south = 51;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reverse_addons_south_), _Internal::kHasBitsOffset + 52, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool reverse_addons_north = 52;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reverse_addons_north_), _Internal::kHasBitsOffset + 53, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool wearout = 53;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.wearout_), _Internal::kHasBitsOffset + 54, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool clockexpire = 54;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.clockexpire_), _Internal::kHasBitsOffset + 55, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool expire = 55;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.expire_), _Internal::kHasBitsOffset + 56, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool expirestop = 56;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.expirestop_), _Internal::kHasBitsOffset + 57, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool wrapkit = 57;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.wrapkit_), _Internal::kHasBitsOffset + 58, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagSkillWheelGem skillwheel_gem = 58;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.skillwheel_gem_), _Internal::kHasBitsOffset + 15, 16,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool dual_wielding = 59;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.dual_wielding_), _Internal::kHasBitsOffset + 59, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .rme.protobuf.appearances.AppearanceFlagImbueable imbueable = 60;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.imbueable_), _Internal::kHasBitsOffset + 16, 17,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .rme.protobuf.appearances.AppearanceFlagProficiency proficiency = 61;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.proficiency_), _Internal::kHasBitsOffset + 17, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .rme.protobuf.appearances.VOCATION restrict_to_vocation = 62;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.restrict_to_vocation_), -1, 19,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnum)},
    // optional uint32 minimum_level = 63;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.minimum_level_), _Internal::kHasBitsOffset + 60, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .rme.protobuf.appearances.WEAPON_TYPE weapon_type = 64;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.weapon_type_), _Internal::kHasBitsOffset + 61, 20,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagBank>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagWrite>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagWriteOnce>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagHook>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagLight>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagShift>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagHeight>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagAutomap>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagLenshelp>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagClothes>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagDefaultAction>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagMarket>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagNPC>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagChangedToExpire>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagCyclopedia>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagUpgradeClassification>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagSkillWheelGem>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagImbueable>()},
    {::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagProficiency>()},
    {::_pbi::FieldAuxEnumData{}, ::rme::protobuf::appearances::VOCATION_internal_data_},
    {0, 9},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlags::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlags)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.npcsaledata_.Clear();
  _impl_.restrict_to_vocation_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.bank_ != nullptr);
      _impl_.bank_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.write_ != nullptr);
      _impl_.write_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.write_once_ != nullptr);
      _impl_.write_once_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.hook_ != nullptr);
      _impl_.hook_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.light_ != nullptr);
      _impl_.light_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.shift_ != nullptr);
      _impl_.shift_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.height_ != nullptr);
      _impl_.height_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.automap_ != nullptr);
      _impl_.automap_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.lenshelp_ != nullptr);
      _impl_.lenshelp_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.clothes_ != nullptr);
      _impl_.clothes_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.default_action_ != nullptr);
      _impl_.default_action_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.market_ != nullptr);
      _impl_.market_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.changedtoexpire_ != nullptr);
      _impl_.changedtoexpire_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.cyclopediaitem_ != nullptr);
      _impl_.cyclopediaitem_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.upgradeclassification_ != nullptr);
      _impl_.upgradeclassification_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(_impl_.skillwheel_gem_ != nullptr);
      _impl_.skillwheel_gem_->Clear();
    }
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(_impl_.imbueable_ != nullptr);
      _impl_.imbueable_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(_impl_.proficiency_ != nullptr);
      _impl_.proficiency_->Clear();
    }
  }
  if (cached_has_bits & 0x00fc0000u) {
    ::memset(&_impl_.clip_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.usable_) -
        reinterpret_cast<char*>(&_impl_.clip_)) + sizeof(_impl_.usable_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.forceuse_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.no_movement_animation_) -
        reinterpret_cast<char*>(&_impl_.forceuse_)) + sizeof(_impl_.no_movement_animation_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.take_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.animate_always_) -
        reinterpret_cast<char*>(&_impl_.take_)) + sizeof(_impl_.animate_always_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.fullbank_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ammo_) -
        reinterpret_cast<char*>(&_impl_.fullbank_)) + sizeof(_impl_.ammo_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.show_off_socket_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.clockexpire_) -
        reinterpret_cast<char*>(&_impl_.show_off_socket_)) + sizeof(_impl_.clockexpire_));
  }
  if (cached_has_bits & 0x3f000000u) {
    ::memset(&_impl_.expire_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.weapon_type_) -
        reinterpret_cast<char*>(&_impl_.expire_)) + sizeof(_impl_.weapon_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlags::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlags& this_ = static_cast<const AppearanceFlags&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlags::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlags& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlags)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagBank bank = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.bank_, this_._impl_.bank_->GetCachedSize(), target,
                stream);
          }

          // optional bool clip = 2;
          if (cached_has_bits & 0x00040000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_clip(), target);
          }

          // optional bool bottom = 3;
          if (cached_has_bits & 0x00080000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_bottom(), target);
          }

          // optional bool top = 4;
          if (cached_has_bits & 0x00100000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_top(), target);
          }

          // optional bool container = 5;
          if (cached_has_bits & 0x00200000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_container(), target);
          }

          // optional bool cumulative = 6;
          if (cached_has_bits & 0x00400000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_cumulative(), target);
          }

          // optional bool usable = 7;
          if (cached_has_bits & 0x00800000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_usable(), target);
          }

          // optional bool forceuse = 8;
          if (cached_has_bits & 0x01000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_forceuse(), target);
          }

          // optional bool multiuse = 9;
          if (cached_has_bits & 0x02000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_multiuse(), target);
          }

          // optional .rme.protobuf.appearances.AppearanceFlagWrite write = 10;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.write_, this_._impl_.write_->GetCachedSize(), target,
                stream);
          }

          // optional .rme.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.write_once_, this_._impl_.write_once_->GetCachedSize(), target,
                stream);
          }

          // optional bool liquidpool = 12;
          if (cached_has_bits & 0x04000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_liquidpool(), target);
          }

          // optional bool unpass = 13;
          if (cached_has_bits & 0x08000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_unpass(), target);
          }

          // optional bool unmove = 14;
          if (cached_has_bits & 0x10000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                14, this_._internal_unmove(), target);
          }

          // optional bool unsight = 15;
          if (cached_has_bits & 0x20000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                15, this_._internal_unsight(), target);
          }

          // optional bool avoid = 16;
          if (cached_has_bits & 0x40000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_avoid(), target);
          }

          // optional bool no_movement_animation = 17;
          if (cached_has_bits & 0x80000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                17, this_._internal_no_movement_animation(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool take = 18;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                18, this_._internal_take(), target);
          }

          // optional bool liquidcontainer = 19;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                19, this_._internal_liquidcontainer(), target);
          }

          // optional bool hang = 20;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                20, this_._internal_hang(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagHook hook = 21;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.hook_, this_._impl_.hook_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool rotate = 22;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                22, this_._internal_rotate(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagLight light = 23;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                23, *this_._impl_.light_, this_._impl_.light_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool dont_hide = 24;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                24, this_._internal_dont_hide(), target);
          }

          // optional bool translucent = 25;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                25, this_._internal_translucent(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagShift shift = 26;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                26, *this_._impl_.shift_, this_._impl_.shift_->GetCachedSize(), target,
                stream);
          }

          // optional .rme.protobuf.appearances.AppearanceFlagHeight height = 27;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                27, *this_._impl_.height_, this_._impl_.height_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool lying_object = 28;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                28, this_._internal_lying_object(), target);
          }

          // optional bool animate_always = 29;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                29, this_._internal_animate_always(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagAutomap automap = 30;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                30, *this_._impl_.automap_, this_._impl_.automap_->GetCachedSize(), target,
                stream);
          }

          // optional .rme.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                31, *this_._impl_.lenshelp_, this_._impl_.lenshelp_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool fullbank = 32;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                32, this_._internal_fullbank(), target);
          }

          // optional bool ignore_look = 33;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                33, this_._internal_ignore_look(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagClothes clothes = 34;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                34, *this_._impl_.clothes_, this_._impl_.clothes_->GetCachedSize(), target,
                stream);
          }

          // optional .rme.protobuf.appearances.AppearanceFlagDefaultAction default_action = 35;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                35, *this_._impl_.default_action_, this_._impl_.default_action_->GetCachedSize(), target,
                stream);
          }

          // optional .rme.protobuf.appearances.AppearanceFlagMarket market = 36;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                36, *this_._impl_.market_, this_._impl_.market_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool wrap = 37;
          if (cached_has_bits & 0x00000400u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                37, this_._internal_wrap(), target);
          }

          // optional bool unwrap = 38;
          if (cached_has_bits & 0x00000800u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                38, this_._internal_unwrap(), target);
          }

          // optional bool topeffect = 39;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                39, this_._internal_topeffect(), target);
          }

          // repeated .rme.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_npcsaledata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_npcsaledata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    40, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
          if (cached_has_bits & 0x00001000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                41, *this_._impl_.changedtoexpire_, this_._impl_.changedtoexpire_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool corpse = 42;
          if (cached_has_bits & 0x00002000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                42, this_._internal_corpse(), target);
          }

          // optional bool player_corpse = 43;
          if (cached_has_bits & 0x00004000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                43, this_._internal_player_corpse(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
          if (cached_has_bits & 0x00002000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                44, *this_._impl_.cyclopediaitem_, this_._impl_.cyclopediaitem_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool ammo = 45;
          if (cached_has_bits & 0x00008000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                45, this_._internal_ammo(), target);
          }

          // optional bool show_off_socket = 46;
          if (cached_has_bits & 0x00010000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                46, this_._internal_show_off_socket(), target);
          }

          // optional bool reportable = 47;
          if (cached_has_bits & 0x00020000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                47, this_._internal_reportable(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagUpgradeClassification upgradeclassification = 48;
          if (cached_has_bits & 0x00004000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                48, *this_._impl_.upgradeclassification_, this_._impl_.upgradeclassification_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool reverse_addons_east = 49;
          if (cached_has_bits & 0x00040000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                49, this_._internal_reverse_addons_east(), target);
          }

          // optional bool reverse_addons_west = 50;
          if (cached_has_bits & 0x00080000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                50, this_._internal_reverse_addons_west(), target);
          }

          // optional bool reverse_addons_south = 51;
          if (cached_has_bits & 0x00100000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                51, this_._internal_reverse_addons_south(), target);
          }

          // optional bool reverse_addons_north = 52;
          if (cached_has_bits & 0x00200000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                52, this_._internal_reverse_addons_north(), target);
          }

          // optional bool wearout = 53;
          if (cached_has_bits & 0x00400000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                53, this_._internal_wearout(), target);
          }

          // optional bool clockexpire = 54;
          if (cached_has_bits & 0x00800000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                54, this_._internal_clockexpire(), target);
          }

          // optional bool expire = 55;
          if (cached_has_bits & 0x01000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                55, this_._internal_expire(), target);
          }

          // optional bool expirestop = 56;
          if (cached_has_bits & 0x02000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                56, this_._internal_expirestop(), target);
          }

          // optional bool wrapkit = 57;
          if (cached_has_bits & 0x04000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                57, this_._internal_wrapkit(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagSkillWheelGem skillwheel_gem = 58;
          if (cached_has_bits & 0x00008000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                58, *this_._impl_.skillwheel_gem_, this_._impl_.skillwheel_gem_->GetCachedSize(), target,
                stream);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional bool dual_wielding = 59;
          if (cached_has_bits & 0x08000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                59, this_._internal_dual_wielding(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.AppearanceFlagImbueable imbueable = 60;
          if (cached_has_bits & 0x00010000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                60, *this_._impl_.imbueable_, this_._impl_.imbueable_->GetCachedSize(), target,
                stream);
          }

          // optional .rme.protobuf.appearances.AppearanceFlagProficiency proficiency = 61;
          if (cached_has_bits & 0x00020000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                61, *this_._impl_.proficiency_, this_._impl_.proficiency_->GetCachedSize(), target,
                stream);
          }

          // repeated .rme.protobuf.appearances.VOCATION restrict_to_vocation = 62;
          for (int i = 0, n = this_._internal_restrict_to_vocation_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                62, static_cast<::rme::protobuf::appearances::VOCATION>(this_._internal_restrict_to_vocation().Get(i)),
                target);
          }

          cached_has_bits = this_._impl_._has_bits_[1];
          // optional uint32 minimum_level = 63;
          if (cached_has_bits & 0x10000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                63, this_._internal_minimum_level(), target);
          }

          // optional .rme.protobuf.appearances.WEAPON_TYPE weapon_type = 64;
          if (cached_has_bits & 0x20000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                64, this_._internal_weapon_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlags)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlags::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlags& this_ = static_cast<const AppearanceFlags&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlags::ByteSizeLong() const {
          const AppearanceFlags& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlags)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rme.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
            {
              total_size += 2UL * this_._internal_npcsaledata_size();
              for (const auto& msg : this_._internal_npcsaledata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .rme.protobuf.appearances.VOCATION restrict_to_vocation = 62;
            {
              std::size_t data_size =
                  ::_pbi::WireFormatLite::EnumSize(this_._internal_restrict_to_vocation());
              std::size_t tag_size = std::size_t{2} *
                  ::_pbi::FromIntSize(this_._internal_restrict_to_vocation_size());
              total_size += data_size + tag_size;
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional .rme.protobuf.appearances.AppearanceFlagBank bank = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bank_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagWrite write = 10;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.write_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.write_once_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagHook hook = 21;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hook_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagLight light = 23;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.light_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagShift shift = 26;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shift_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagHeight height = 27;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.height_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagAutomap automap = 30;
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.automap_);
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // optional .rme.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lenshelp_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagClothes clothes = 34;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.clothes_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagDefaultAction default_action = 35;
            if (cached_has_bits & 0x00000400u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.default_action_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagMarket market = 36;
            if (cached_has_bits & 0x00000800u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.market_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
            if (cached_has_bits & 0x00001000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.changedtoexpire_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
            if (cached_has_bits & 0x00002000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cyclopediaitem_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagUpgradeClassification upgradeclassification = 48;
            if (cached_has_bits & 0x00004000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.upgradeclassification_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagSkillWheelGem skillwheel_gem = 58;
            if (cached_has_bits & 0x00008000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.skillwheel_gem_);
            }
          }
          if (cached_has_bits & 0x00ff0000u) {
            // optional .rme.protobuf.appearances.AppearanceFlagImbueable imbueable = 60;
            if (cached_has_bits & 0x00010000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.imbueable_);
            }
            // optional .rme.protobuf.appearances.AppearanceFlagProficiency proficiency = 61;
            if (cached_has_bits & 0x00020000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proficiency_);
            }
            // optional bool clip = 2;
            if (cached_has_bits & 0x00040000u) {
              total_size += 2;
            }
            // optional bool bottom = 3;
            if (cached_has_bits & 0x00080000u) {
              total_size += 2;
            }
            // optional bool top = 4;
            if (cached_has_bits & 0x00100000u) {
              total_size += 2;
            }
            // optional bool container = 5;
            if (cached_has_bits & 0x00200000u) {
              total_size += 2;
            }
            // optional bool cumulative = 6;
            if (cached_has_bits & 0x00400000u) {
              total_size += 2;
            }
            // optional bool usable = 7;
            if (cached_has_bits & 0x00800000u) {
              total_size += 2;
            }
          }
          if (cached_has_bits & 0xff000000u) {
            // optional bool forceuse = 8;
            if (cached_has_bits & 0x01000000u) {
              total_size += 2;
            }
            // optional bool multiuse = 9;
            if (cached_has_bits & 0x02000000u) {
              total_size += 2;
            }
            // optional bool liquidpool = 12;
            if (cached_has_bits & 0x04000000u) {
              total_size += 2;
            }
            // optional bool unpass = 13;
            if (cached_has_bits & 0x08000000u) {
              total_size += 2;
            }
            // optional bool unmove = 14;
            if (cached_has_bits & 0x10000000u) {
              total_size += 2;
            }
            // optional bool unsight = 15;
            if (cached_has_bits & 0x20000000u) {
              total_size += 2;
            }
            // optional bool avoid = 16;
            if (cached_has_bits & 0x40000000u) {
              total_size += 3;
            }
            // optional bool no_movement_animation = 17;
            if (cached_has_bits & 0x80000000u) {
              total_size += 3;
            }
          }
          cached_has_bits = this_._impl_._has_bits_[1];
          if (cached_has_bits & 0x000000ffu) {
            // optional bool take = 18;
            if (cached_has_bits & 0x00000001u) {
              total_size += 3;
            }
            // optional bool liquidcontainer = 19;
            if (cached_has_bits & 0x00000002u) {
              total_size += 3;
            }
            // optional bool hang = 20;
            if (cached_has_bits & 0x00000004u) {
              total_size += 3;
            }
            // optional bool rotate = 22;
            if (cached_has_bits & 0x00000008u) {
              total_size += 3;
            }
            // optional bool dont_hide = 24;
            if (cached_has_bits & 0x00000010u) {
              total_size += 3;
            }
            // optional bool translucent = 25;
            if (cached_has_bits & 0x00000020u) {
              total_size += 3;
            }
            // optional bool lying_object = 28;
            if (cached_has_bits & 0x00000040u) {
              total_size += 3;
            }
            // optional bool animate_always = 29;
            if (cached_has_bits & 0x00000080u) {
              total_size += 3;
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // optional bool fullbank = 32;
            if (cached_has_bits & 0x00000100u) {
              total_size += 3;
            }
            // optional bool ignore_look = 33;
            if (cached_has_bits & 0x00000200u) {
              total_size += 3;
            }
            // optional bool wrap = 37;
            if (cached_has_bits & 0x00000400u) {
              total_size += 3;
            }
            // optional bool unwrap = 38;
            if (cached_has_bits & 0x00000800u) {
              total_size += 3;
            }
            // optional bool topeffect = 39;
            if (cached_has_bits & 0x00001000u) {
              total_size += 3;
            }
            // optional bool corpse = 42;
            if (cached_has_bits & 0x00002000u) {
              total_size += 3;
            }
            // optional bool player_corpse = 43;
            if (cached_has_bits & 0x00004000u) {
              total_size += 3;
            }
            // optional bool ammo = 45;
            if (cached_has_bits & 0x00008000u) {
              total_size += 3;
            }
          }
          if (cached_has_bits & 0x00ff0000u) {
            // optional bool show_off_socket = 46;
            if (cached_has_bits & 0x00010000u) {
              total_size += 3;
            }
            // optional bool reportable = 47;
            if (cached_has_bits & 0x00020000u) {
              total_size += 3;
            }
            // optional bool reverse_addons_east = 49;
            if (cached_has_bits & 0x00040000u) {
              total_size += 3;
            }
            // optional bool reverse_addons_west = 50;
            if (cached_has_bits & 0x00080000u) {
              total_size += 3;
            }
            // optional bool reverse_addons_south = 51;
            if (cached_has_bits & 0x00100000u) {
              total_size += 3;
            }
            // optional bool reverse_addons_north = 52;
            if (cached_has_bits & 0x00200000u) {
              total_size += 3;
            }
            // optional bool wearout = 53;
            if (cached_has_bits & 0x00400000u) {
              total_size += 3;
            }
            // optional bool clockexpire = 54;
            if (cached_has_bits & 0x00800000u) {
              total_size += 3;
            }
          }
          if (cached_has_bits & 0x3f000000u) {
            // optional bool expire = 55;
            if (cached_has_bits & 0x01000000u) {
              total_size += 3;
            }
            // optional bool expirestop = 56;
            if (cached_has_bits & 0x02000000u) {
              total_size += 3;
            }
            // optional bool wrapkit = 57;
            if (cached_has_bits & 0x04000000u) {
              total_size += 3;
            }
            // optional bool dual_wielding = 59;
            if (cached_has_bits & 0x08000000u) {
              total_size += 3;
            }
            // optional uint32 minimum_level = 63;
            if (cached_has_bits & 0x10000000u) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_minimum_level());
            }
            // optional .rme.protobuf.appearances.WEAPON_TYPE weapon_type = 64;
            if (cached_has_bits & 0x20000000u) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_weapon_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlags::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlags*>(&to_msg);
  auto& from = static_cast<const AppearanceFlags&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlags)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_npcsaledata()->MergeFrom(
      from._internal_npcsaledata());
  _this->_internal_mutable_restrict_to_vocation()->MergeFrom(from._internal_restrict_to_vocation());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.bank_ != nullptr);
      if (_this->_impl_.bank_ == nullptr) {
        _this->_impl_.bank_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagBank>(arena, *from._impl_.bank_);
      } else {
        _this->_impl_.bank_->MergeFrom(*from._impl_.bank_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.write_ != nullptr);
      if (_this->_impl_.write_ == nullptr) {
        _this->_impl_.write_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagWrite>(arena, *from._impl_.write_);
      } else {
        _this->_impl_.write_->MergeFrom(*from._impl_.write_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.write_once_ != nullptr);
      if (_this->_impl_.write_once_ == nullptr) {
        _this->_impl_.write_once_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagWriteOnce>(arena, *from._impl_.write_once_);
      } else {
        _this->_impl_.write_once_->MergeFrom(*from._impl_.write_once_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.hook_ != nullptr);
      if (_this->_impl_.hook_ == nullptr) {
        _this->_impl_.hook_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagHook>(arena, *from._impl_.hook_);
      } else {
        _this->_impl_.hook_->MergeFrom(*from._impl_.hook_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.light_ != nullptr);
      if (_this->_impl_.light_ == nullptr) {
        _this->_impl_.light_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagLight>(arena, *from._impl_.light_);
      } else {
        _this->_impl_.light_->MergeFrom(*from._impl_.light_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.shift_ != nullptr);
      if (_this->_impl_.shift_ == nullptr) {
        _this->_impl_.shift_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagShift>(arena, *from._impl_.shift_);
      } else {
        _this->_impl_.shift_->MergeFrom(*from._impl_.shift_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.height_ != nullptr);
      if (_this->_impl_.height_ == nullptr) {
        _this->_impl_.height_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagHeight>(arena, *from._impl_.height_);
      } else {
        _this->_impl_.height_->MergeFrom(*from._impl_.height_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.automap_ != nullptr);
      if (_this->_impl_.automap_ == nullptr) {
        _this->_impl_.automap_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagAutomap>(arena, *from._impl_.automap_);
      } else {
        _this->_impl_.automap_->MergeFrom(*from._impl_.automap_);
      }
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.lenshelp_ != nullptr);
      if (_this->_impl_.lenshelp_ == nullptr) {
        _this->_impl_.lenshelp_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagLenshelp>(arena, *from._impl_.lenshelp_);
      } else {
        _this->_impl_.lenshelp_->MergeFrom(*from._impl_.lenshelp_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.clothes_ != nullptr);
      if (_this->_impl_.clothes_ == nullptr) {
        _this->_impl_.clothes_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagClothes>(arena, *from._impl_.clothes_);
      } else {
        _this->_impl_.clothes_->MergeFrom(*from._impl_.clothes_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.default_action_ != nullptr);
      if (_this->_impl_.default_action_ == nullptr) {
        _this->_impl_.default_action_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagDefaultAction>(arena, *from._impl_.default_action_);
      } else {
        _this->_impl_.default_action_->MergeFrom(*from._impl_.default_action_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.market_ != nullptr);
      if (_this->_impl_.market_ == nullptr) {
        _this->_impl_.market_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagMarket>(arena, *from._impl_.market_);
      } else {
        _this->_impl_.market_->MergeFrom(*from._impl_.market_);
      }
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(from._impl_.changedtoexpire_ != nullptr);
      if (_this->_impl_.changedtoexpire_ == nullptr) {
        _this->_impl_.changedtoexpire_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagChangedToExpire>(arena, *from._impl_.changedtoexpire_);
      } else {
        _this->_impl_.changedtoexpire_->MergeFrom(*from._impl_.changedtoexpire_);
      }
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(from._impl_.cyclopediaitem_ != nullptr);
      if (_this->_impl_.cyclopediaitem_ == nullptr) {
        _this->_impl_.cyclopediaitem_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagCyclopedia>(arena, *from._impl_.cyclopediaitem_);
      } else {
        _this->_impl_.cyclopediaitem_->MergeFrom(*from._impl_.cyclopediaitem_);
      }
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(from._impl_.upgradeclassification_ != nullptr);
      if (_this->_impl_.upgradeclassification_ == nullptr) {
        _this->_impl_.upgradeclassification_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagUpgradeClassification>(arena, *from._impl_.upgradeclassification_);
      } else {
        _this->_impl_.upgradeclassification_->MergeFrom(*from._impl_.upgradeclassification_);
      }
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(from._impl_.skillwheel_gem_ != nullptr);
      if (_this->_impl_.skillwheel_gem_ == nullptr) {
        _this->_impl_.skillwheel_gem_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagSkillWheelGem>(arena, *from._impl_.skillwheel_gem_);
      } else {
        _this->_impl_.skillwheel_gem_->MergeFrom(*from._impl_.skillwheel_gem_);
      }
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(from._impl_.imbueable_ != nullptr);
      if (_this->_impl_.imbueable_ == nullptr) {
        _this->_impl_.imbueable_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagImbueable>(arena, *from._impl_.imbueable_);
      } else {
        _this->_impl_.imbueable_->MergeFrom(*from._impl_.imbueable_);
      }
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(from._impl_.proficiency_ != nullptr);
      if (_this->_impl_.proficiency_ == nullptr) {
        _this->_impl_.proficiency_ =
            ::google::protobuf::Message::CopyConstruct<::rme::protobuf::appearances::AppearanceFlagProficiency>(arena, *from._impl_.proficiency_);
      } else {
        _this->_impl_.proficiency_->MergeFrom(*from._impl_.proficiency_);
      }
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.clip_ = from._impl_.clip_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.bottom_ = from._impl_.bottom_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.top_ = from._impl_.top_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.container_ = from._impl_.container_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.cumulative_ = from._impl_.cumulative_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.usable_ = from._impl_.usable_;
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.forceuse_ = from._impl_.forceuse_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.multiuse_ = from._impl_.multiuse_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.liquidpool_ = from._impl_.liquidpool_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.unpass_ = from._impl_.unpass_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.unmove_ = from._impl_.unmove_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.unsight_ = from._impl_.unsight_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.avoid_ = from._impl_.avoid_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.no_movement_animation_ = from._impl_.no_movement_animation_;
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.take_ = from._impl_.take_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.liquidcontainer_ = from._impl_.liquidcontainer_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.hang_ = from._impl_.hang_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.rotate_ = from._impl_.rotate_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.dont_hide_ = from._impl_.dont_hide_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.translucent_ = from._impl_.translucent_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.lying_object_ = from._impl_.lying_object_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.animate_always_ = from._impl_.animate_always_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.fullbank_ = from._impl_.fullbank_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.ignore_look_ = from._impl_.ignore_look_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.wrap_ = from._impl_.wrap_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.unwrap_ = from._impl_.unwrap_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.topeffect_ = from._impl_.topeffect_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.corpse_ = from._impl_.corpse_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.player_corpse_ = from._impl_.player_corpse_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.ammo_ = from._impl_.ammo_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.show_off_socket_ = from._impl_.show_off_socket_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.reportable_ = from._impl_.reportable_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.reverse_addons_east_ = from._impl_.reverse_addons_east_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.reverse_addons_west_ = from._impl_.reverse_addons_west_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.reverse_addons_south_ = from._impl_.reverse_addons_south_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.reverse_addons_north_ = from._impl_.reverse_addons_north_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.wearout_ = from._impl_.wearout_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.clockexpire_ = from._impl_.clockexpire_;
    }
  }
  if (cached_has_bits & 0x3f000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.expire_ = from._impl_.expire_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.expirestop_ = from._impl_.expirestop_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.wrapkit_ = from._impl_.wrapkit_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.dual_wielding_ = from._impl_.dual_wielding_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.minimum_level_ = from._impl_.minimum_level_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.weapon_type_ = from._impl_.weapon_type_;
    }
  }
  _this->_impl_._has_bits_.Or(from._impl_._has_bits_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlags::CopyFrom(const AppearanceFlags& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlags::InternalSwap(AppearanceFlags* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  _impl_.npcsaledata_.InternalSwap(&other->_impl_.npcsaledata_);
  _impl_.restrict_to_vocation_.InternalSwap(&other->_impl_.restrict_to_vocation_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.weapon_type_)
      + sizeof(AppearanceFlags::_impl_.weapon_type_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bank_)>(
          reinterpret_cast<char*>(&_impl_.bank_),
          reinterpret_cast<char*>(&other->_impl_.bank_));
}

::google::protobuf::Metadata AppearanceFlags::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagUpgradeClassification::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagUpgradeClassification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagUpgradeClassification, _impl_._has_bits_);
};

AppearanceFlagUpgradeClassification::AppearanceFlagUpgradeClassification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagUpgradeClassification)
}
AppearanceFlagUpgradeClassification::AppearanceFlagUpgradeClassification(
    ::google::protobuf::Arena* arena, const AppearanceFlagUpgradeClassification& from)
    : AppearanceFlagUpgradeClassification(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagUpgradeClassification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagUpgradeClassification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.upgrade_classification_ = {};
}
AppearanceFlagUpgradeClassification::~AppearanceFlagUpgradeClassification() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagUpgradeClassification)
  SharedDtor(*this);
}
inline void AppearanceFlagUpgradeClassification::SharedDtor(MessageLite& self) {
  AppearanceFlagUpgradeClassification& this_ = static_cast<AppearanceFlagUpgradeClassification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagUpgradeClassification::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagUpgradeClassification(arena);
}
constexpr auto AppearanceFlagUpgradeClassification::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagUpgradeClassification),
                                            alignof(AppearanceFlagUpgradeClassification));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagUpgradeClassification::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagUpgradeClassification_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagUpgradeClassification::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagUpgradeClassification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagUpgradeClassification::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagUpgradeClassification>(), &AppearanceFlagUpgradeClassification::ByteSizeLong,
            &AppearanceFlagUpgradeClassification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagUpgradeClassification, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagUpgradeClassification::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagUpgradeClassification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagUpgradeClassification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagUpgradeClassification, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagUpgradeClassification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 upgrade_classification = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagUpgradeClassification, _impl_.upgrade_classification_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagUpgradeClassification, _impl_.upgrade_classification_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 upgrade_classification = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagUpgradeClassification, _impl_.upgrade_classification_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagUpgradeClassification::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagUpgradeClassification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.upgrade_classification_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagUpgradeClassification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagUpgradeClassification& this_ = static_cast<const AppearanceFlagUpgradeClassification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagUpgradeClassification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagUpgradeClassification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagUpgradeClassification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 upgrade_classification = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_upgrade_classification(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagUpgradeClassification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagUpgradeClassification::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagUpgradeClassification& this_ = static_cast<const AppearanceFlagUpgradeClassification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagUpgradeClassification::ByteSizeLong() const {
          const AppearanceFlagUpgradeClassification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagUpgradeClassification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 upgrade_classification = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_upgrade_classification());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagUpgradeClassification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagUpgradeClassification*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagUpgradeClassification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagUpgradeClassification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.upgrade_classification_ = from._impl_.upgrade_classification_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagUpgradeClassification::CopyFrom(const AppearanceFlagUpgradeClassification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagUpgradeClassification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagUpgradeClassification::InternalSwap(AppearanceFlagUpgradeClassification* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.upgrade_classification_, other->_impl_.upgrade_classification_);
}

::google::protobuf::Metadata AppearanceFlagUpgradeClassification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagBank::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagBank>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagBank, _impl_._has_bits_);
};

AppearanceFlagBank::AppearanceFlagBank(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagBank)
}
AppearanceFlagBank::AppearanceFlagBank(
    ::google::protobuf::Arena* arena, const AppearanceFlagBank& from)
    : AppearanceFlagBank(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagBank::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagBank::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.waypoints_ = {};
}
AppearanceFlagBank::~AppearanceFlagBank() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagBank)
  SharedDtor(*this);
}
inline void AppearanceFlagBank::SharedDtor(MessageLite& self) {
  AppearanceFlagBank& this_ = static_cast<AppearanceFlagBank&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagBank::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagBank(arena);
}
constexpr auto AppearanceFlagBank::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagBank),
                                            alignof(AppearanceFlagBank));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagBank::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagBank_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagBank::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagBank>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagBank::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagBank>(), &AppearanceFlagBank::ByteSizeLong,
            &AppearanceFlagBank::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagBank, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagBank::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagBank::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagBank::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagBank, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagBank>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 waypoints = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagBank, _impl_.waypoints_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagBank, _impl_.waypoints_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 waypoints = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagBank, _impl_.waypoints_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagBank::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagBank)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.waypoints_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagBank::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagBank& this_ = static_cast<const AppearanceFlagBank&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagBank::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagBank& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagBank)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 waypoints = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_waypoints(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagBank)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagBank::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagBank& this_ = static_cast<const AppearanceFlagBank&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagBank::ByteSizeLong() const {
          const AppearanceFlagBank& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagBank)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 waypoints = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_waypoints());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagBank::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagBank*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagBank&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagBank)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.waypoints_ = from._impl_.waypoints_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagBank::CopyFrom(const AppearanceFlagBank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagBank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagBank::InternalSwap(AppearanceFlagBank* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.waypoints_, other->_impl_.waypoints_);
}

::google::protobuf::Metadata AppearanceFlagBank::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagWrite::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagWrite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagWrite, _impl_._has_bits_);
};

AppearanceFlagWrite::AppearanceFlagWrite(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagWrite)
}
AppearanceFlagWrite::AppearanceFlagWrite(
    ::google::protobuf::Arena* arena, const AppearanceFlagWrite& from)
    : AppearanceFlagWrite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagWrite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagWrite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_text_length_ = {};
}
AppearanceFlagWrite::~AppearanceFlagWrite() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagWrite)
  SharedDtor(*this);
}
inline void AppearanceFlagWrite::SharedDtor(MessageLite& self) {
  AppearanceFlagWrite& this_ = static_cast<AppearanceFlagWrite&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagWrite::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagWrite(arena);
}
constexpr auto AppearanceFlagWrite::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagWrite),
                                            alignof(AppearanceFlagWrite));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagWrite::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagWrite_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagWrite::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagWrite>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagWrite::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagWrite>(), &AppearanceFlagWrite::ByteSizeLong,
            &AppearanceFlagWrite::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagWrite, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagWrite::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagWrite::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagWrite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagWrite, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagWrite>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 max_text_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagWrite, _impl_.max_text_length_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagWrite, _impl_.max_text_length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 max_text_length = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagWrite, _impl_.max_text_length_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagWrite::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagWrite)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.max_text_length_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagWrite::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagWrite& this_ = static_cast<const AppearanceFlagWrite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagWrite::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagWrite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagWrite)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 max_text_length = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_max_text_length(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagWrite)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagWrite::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagWrite& this_ = static_cast<const AppearanceFlagWrite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagWrite::ByteSizeLong() const {
          const AppearanceFlagWrite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagWrite)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 max_text_length = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_text_length());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagWrite::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagWrite*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagWrite&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagWrite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.max_text_length_ = from._impl_.max_text_length_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagWrite::CopyFrom(const AppearanceFlagWrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagWrite::InternalSwap(AppearanceFlagWrite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.max_text_length_, other->_impl_.max_text_length_);
}

::google::protobuf::Metadata AppearanceFlagWrite::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagWriteOnce::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagWriteOnce>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagWriteOnce, _impl_._has_bits_);
};

AppearanceFlagWriteOnce::AppearanceFlagWriteOnce(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagWriteOnce)
}
AppearanceFlagWriteOnce::AppearanceFlagWriteOnce(
    ::google::protobuf::Arena* arena, const AppearanceFlagWriteOnce& from)
    : AppearanceFlagWriteOnce(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagWriteOnce::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagWriteOnce::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_text_length_once_ = {};
}
AppearanceFlagWriteOnce::~AppearanceFlagWriteOnce() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagWriteOnce)
  SharedDtor(*this);
}
inline void AppearanceFlagWriteOnce::SharedDtor(MessageLite& self) {
  AppearanceFlagWriteOnce& this_ = static_cast<AppearanceFlagWriteOnce&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagWriteOnce::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagWriteOnce(arena);
}
constexpr auto AppearanceFlagWriteOnce::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagWriteOnce),
                                            alignof(AppearanceFlagWriteOnce));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagWriteOnce::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagWriteOnce_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagWriteOnce::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagWriteOnce>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagWriteOnce::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagWriteOnce>(), &AppearanceFlagWriteOnce::ByteSizeLong,
            &AppearanceFlagWriteOnce::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagWriteOnce, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagWriteOnce::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagWriteOnce::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagWriteOnce::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagWriteOnce, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagWriteOnce>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 max_text_length_once = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagWriteOnce, _impl_.max_text_length_once_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagWriteOnce, _impl_.max_text_length_once_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 max_text_length_once = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagWriteOnce, _impl_.max_text_length_once_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagWriteOnce::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagWriteOnce)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.max_text_length_once_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagWriteOnce::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagWriteOnce& this_ = static_cast<const AppearanceFlagWriteOnce&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagWriteOnce::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagWriteOnce& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagWriteOnce)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 max_text_length_once = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_max_text_length_once(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagWriteOnce)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagWriteOnce::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagWriteOnce& this_ = static_cast<const AppearanceFlagWriteOnce&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagWriteOnce::ByteSizeLong() const {
          const AppearanceFlagWriteOnce& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagWriteOnce)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 max_text_length_once = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_text_length_once());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagWriteOnce::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagWriteOnce*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagWriteOnce&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagWriteOnce)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.max_text_length_once_ = from._impl_.max_text_length_once_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagWriteOnce::CopyFrom(const AppearanceFlagWriteOnce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagWriteOnce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagWriteOnce::InternalSwap(AppearanceFlagWriteOnce* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.max_text_length_once_, other->_impl_.max_text_length_once_);
}

::google::protobuf::Metadata AppearanceFlagWriteOnce::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagLight::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagLight>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_._has_bits_);
};

AppearanceFlagLight::AppearanceFlagLight(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagLight)
}
AppearanceFlagLight::AppearanceFlagLight(
    ::google::protobuf::Arena* arena, const AppearanceFlagLight& from)
    : AppearanceFlagLight(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagLight::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagLight::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, brightness_),
           0,
           offsetof(Impl_, color_) -
               offsetof(Impl_, brightness_) +
               sizeof(Impl_::color_));
}
AppearanceFlagLight::~AppearanceFlagLight() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagLight)
  SharedDtor(*this);
}
inline void AppearanceFlagLight::SharedDtor(MessageLite& self) {
  AppearanceFlagLight& this_ = static_cast<AppearanceFlagLight&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagLight::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagLight(arena);
}
constexpr auto AppearanceFlagLight::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagLight),
                                            alignof(AppearanceFlagLight));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagLight::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagLight_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagLight::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagLight>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagLight::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagLight>(), &AppearanceFlagLight::ByteSizeLong,
            &AppearanceFlagLight::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagLight::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagLight::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AppearanceFlagLight::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagLight>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 color = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagLight, _impl_.color_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.color_)}},
    // optional uint32 brightness = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagLight, _impl_.brightness_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.brightness_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 brightness = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.brightness_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 color = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.color_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagLight::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagLight)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.brightness_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.color_) -
        reinterpret_cast<char*>(&_impl_.brightness_)) + sizeof(_impl_.color_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagLight::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagLight& this_ = static_cast<const AppearanceFlagLight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagLight::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagLight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagLight)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 brightness = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_brightness(), target);
          }

          // optional uint32 color = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_color(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagLight)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagLight::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagLight& this_ = static_cast<const AppearanceFlagLight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagLight::ByteSizeLong() const {
          const AppearanceFlagLight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagLight)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional uint32 brightness = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_brightness());
            }
            // optional uint32 color = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_color());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagLight::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagLight*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagLight&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagLight)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.brightness_ = from._impl_.brightness_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.color_ = from._impl_.color_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagLight::CopyFrom(const AppearanceFlagLight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagLight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagLight::InternalSwap(AppearanceFlagLight* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.color_)
      + sizeof(AppearanceFlagLight::_impl_.color_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.brightness_)>(
          reinterpret_cast<char*>(&_impl_.brightness_),
          reinterpret_cast<char*>(&other->_impl_.brightness_));
}

::google::protobuf::Metadata AppearanceFlagLight::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagHeight::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagHeight>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagHeight, _impl_._has_bits_);
};

AppearanceFlagHeight::AppearanceFlagHeight(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagHeight)
}
AppearanceFlagHeight::AppearanceFlagHeight(
    ::google::protobuf::Arena* arena, const AppearanceFlagHeight& from)
    : AppearanceFlagHeight(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagHeight::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagHeight::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.elevation_ = {};
}
AppearanceFlagHeight::~AppearanceFlagHeight() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagHeight)
  SharedDtor(*this);
}
inline void AppearanceFlagHeight::SharedDtor(MessageLite& self) {
  AppearanceFlagHeight& this_ = static_cast<AppearanceFlagHeight&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagHeight::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagHeight(arena);
}
constexpr auto AppearanceFlagHeight::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagHeight),
                                            alignof(AppearanceFlagHeight));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagHeight::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagHeight_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagHeight::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagHeight>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagHeight::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagHeight>(), &AppearanceFlagHeight::ByteSizeLong,
            &AppearanceFlagHeight::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagHeight, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagHeight::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagHeight::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagHeight::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagHeight, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagHeight>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 elevation = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagHeight, _impl_.elevation_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagHeight, _impl_.elevation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 elevation = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagHeight, _impl_.elevation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagHeight::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagHeight)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.elevation_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagHeight::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagHeight& this_ = static_cast<const AppearanceFlagHeight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagHeight::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagHeight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagHeight)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 elevation = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_elevation(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagHeight)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagHeight::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagHeight& this_ = static_cast<const AppearanceFlagHeight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagHeight::ByteSizeLong() const {
          const AppearanceFlagHeight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagHeight)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 elevation = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_elevation());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagHeight::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagHeight*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagHeight&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagHeight)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.elevation_ = from._impl_.elevation_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagHeight::CopyFrom(const AppearanceFlagHeight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagHeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagHeight::InternalSwap(AppearanceFlagHeight* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.elevation_, other->_impl_.elevation_);
}

::google::protobuf::Metadata AppearanceFlagHeight::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagShift::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagShift>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_._has_bits_);
};

AppearanceFlagShift::AppearanceFlagShift(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagShift)
}
AppearanceFlagShift::AppearanceFlagShift(
    ::google::protobuf::Arena* arena, const AppearanceFlagShift& from)
    : AppearanceFlagShift(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagShift::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagShift::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
AppearanceFlagShift::~AppearanceFlagShift() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagShift)
  SharedDtor(*this);
}
inline void AppearanceFlagShift::SharedDtor(MessageLite& self) {
  AppearanceFlagShift& this_ = static_cast<AppearanceFlagShift&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagShift::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagShift(arena);
}
constexpr auto AppearanceFlagShift::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagShift),
                                            alignof(AppearanceFlagShift));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagShift::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagShift_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagShift::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagShift>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagShift::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagShift>(), &AppearanceFlagShift::ByteSizeLong,
            &AppearanceFlagShift::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagShift::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagShift::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AppearanceFlagShift::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagShift>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagShift, _impl_.y_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.y_)}},
    // optional uint32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagShift, _impl_.x_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 x = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 y = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagShift::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagShift)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.y_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagShift::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagShift& this_ = static_cast<const AppearanceFlagShift&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagShift::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagShift& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagShift)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 x = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_x(), target);
          }

          // optional uint32 y = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_y(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagShift)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagShift::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagShift& this_ = static_cast<const AppearanceFlagShift&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagShift::ByteSizeLong() const {
          const AppearanceFlagShift& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagShift)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional uint32 x = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_x());
            }
            // optional uint32 y = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_y());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagShift::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagShift*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagShift&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagShift)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagShift::CopyFrom(const AppearanceFlagShift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagShift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagShift::InternalSwap(AppearanceFlagShift* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.y_)
      + sizeof(AppearanceFlagShift::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata AppearanceFlagShift::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagClothes::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagClothes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagClothes, _impl_._has_bits_);
};

AppearanceFlagClothes::AppearanceFlagClothes(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagClothes)
}
AppearanceFlagClothes::AppearanceFlagClothes(
    ::google::protobuf::Arena* arena, const AppearanceFlagClothes& from)
    : AppearanceFlagClothes(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagClothes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagClothes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.slot_ = {};
}
AppearanceFlagClothes::~AppearanceFlagClothes() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagClothes)
  SharedDtor(*this);
}
inline void AppearanceFlagClothes::SharedDtor(MessageLite& self) {
  AppearanceFlagClothes& this_ = static_cast<AppearanceFlagClothes&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagClothes::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagClothes(arena);
}
constexpr auto AppearanceFlagClothes::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagClothes),
                                            alignof(AppearanceFlagClothes));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagClothes::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagClothes_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagClothes::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagClothes>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagClothes::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagClothes>(), &AppearanceFlagClothes::ByteSizeLong,
            &AppearanceFlagClothes::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagClothes, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagClothes::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagClothes::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagClothes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagClothes, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagClothes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagClothes, _impl_.slot_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagClothes, _impl_.slot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 slot = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagClothes, _impl_.slot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagClothes::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagClothes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagClothes::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagClothes& this_ = static_cast<const AppearanceFlagClothes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagClothes::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagClothes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagClothes)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 slot = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_slot(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagClothes)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagClothes::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagClothes& this_ = static_cast<const AppearanceFlagClothes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagClothes::ByteSizeLong() const {
          const AppearanceFlagClothes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagClothes)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 slot = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_slot());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagClothes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagClothes*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagClothes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagClothes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.slot_ = from._impl_.slot_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagClothes::CopyFrom(const AppearanceFlagClothes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagClothes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagClothes::InternalSwap(AppearanceFlagClothes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.slot_, other->_impl_.slot_);
}

::google::protobuf::Metadata AppearanceFlagClothes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagDefaultAction::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagDefaultAction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagDefaultAction, _impl_._has_bits_);
};

AppearanceFlagDefaultAction::AppearanceFlagDefaultAction(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagDefaultAction)
}
AppearanceFlagDefaultAction::AppearanceFlagDefaultAction(
    ::google::protobuf::Arena* arena, const AppearanceFlagDefaultAction& from)
    : AppearanceFlagDefaultAction(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagDefaultAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagDefaultAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.action_ = {};
}
AppearanceFlagDefaultAction::~AppearanceFlagDefaultAction() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagDefaultAction)
  SharedDtor(*this);
}
inline void AppearanceFlagDefaultAction::SharedDtor(MessageLite& self) {
  AppearanceFlagDefaultAction& this_ = static_cast<AppearanceFlagDefaultAction&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagDefaultAction::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagDefaultAction(arena);
}
constexpr auto AppearanceFlagDefaultAction::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagDefaultAction),
                                            alignof(AppearanceFlagDefaultAction));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagDefaultAction::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagDefaultAction_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagDefaultAction::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagDefaultAction>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagDefaultAction::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagDefaultAction>(), &AppearanceFlagDefaultAction::ByteSizeLong,
            &AppearanceFlagDefaultAction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagDefaultAction, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagDefaultAction::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagDefaultAction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AppearanceFlagDefaultAction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagDefaultAction, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagDefaultAction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .rme.protobuf.appearances.PLAYER_ACTION action = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 4, PROTOBUF_FIELD_OFFSET(AppearanceFlagDefaultAction, _impl_.action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .rme.protobuf.appearances.PLAYER_ACTION action = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagDefaultAction, _impl_.action_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 5},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagDefaultAction::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagDefaultAction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.action_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagDefaultAction::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagDefaultAction& this_ = static_cast<const AppearanceFlagDefaultAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagDefaultAction::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagDefaultAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagDefaultAction)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.PLAYER_ACTION action = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_action(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagDefaultAction)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagDefaultAction::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagDefaultAction& this_ = static_cast<const AppearanceFlagDefaultAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagDefaultAction::ByteSizeLong() const {
          const AppearanceFlagDefaultAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagDefaultAction)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional .rme.protobuf.appearances.PLAYER_ACTION action = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_action());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagDefaultAction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagDefaultAction*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagDefaultAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagDefaultAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.action_ = from._impl_.action_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagDefaultAction::CopyFrom(const AppearanceFlagDefaultAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagDefaultAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagDefaultAction::InternalSwap(AppearanceFlagDefaultAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.action_, other->_impl_.action_);
}

::google::protobuf::Metadata AppearanceFlagDefaultAction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagMarket::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagMarket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_._has_bits_);
};

AppearanceFlagMarket::AppearanceFlagMarket(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagMarket)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagMarket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rme::protobuf::appearances::AppearanceFlagMarket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        restrict_to_profession_{visibility, arena, from.restrict_to_profession_} {}

AppearanceFlagMarket::AppearanceFlagMarket(
    ::google::protobuf::Arena* arena,
    const AppearanceFlagMarket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AppearanceFlagMarket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trade_as_object_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, trade_as_object_id_),
           offsetof(Impl_, category_) -
               offsetof(Impl_, trade_as_object_id_) +
               sizeof(Impl_::category_));

  // @@protoc_insertion_point(copy_constructor:rme.protobuf.appearances.AppearanceFlagMarket)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagMarket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        restrict_to_profession_{visibility, arena},
        category_{static_cast< ::rme::protobuf::appearances::ITEM_CATEGORY >(1)} {}

inline void AppearanceFlagMarket::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trade_as_object_id_),
           0,
           offsetof(Impl_, minimum_level_) -
               offsetof(Impl_, trade_as_object_id_) +
               sizeof(Impl_::minimum_level_));
}
AppearanceFlagMarket::~AppearanceFlagMarket() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagMarket)
  SharedDtor(*this);
}
inline void AppearanceFlagMarket::SharedDtor(MessageLite& self) {
  AppearanceFlagMarket& this_ = static_cast<AppearanceFlagMarket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagMarket::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagMarket(arena);
}
constexpr auto AppearanceFlagMarket::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.restrict_to_profession_) +
          decltype(AppearanceFlagMarket::_impl_.restrict_to_profession_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AppearanceFlagMarket), alignof(AppearanceFlagMarket), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AppearanceFlagMarket::PlacementNew_,
                                 sizeof(AppearanceFlagMarket),
                                 alignof(AppearanceFlagMarket));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagMarket::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagMarket_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagMarket::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagMarket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagMarket::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagMarket>(), &AppearanceFlagMarket::ByteSizeLong,
            &AppearanceFlagMarket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagMarket::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagMarket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> AppearanceFlagMarket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967240,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagMarket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .rme.protobuf.appearances.ITEM_CATEGORY category = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 3, 26, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.category_)}},
    // optional uint32 trade_as_object_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagMarket, _impl_.trade_as_object_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.trade_as_object_id_)}},
    // optional uint32 show_as_object_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagMarket, _impl_.show_as_object_id_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.show_as_object_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .rme.protobuf.appearances.PLAYER_PROFESSION restrict_to_profession = 5;
    {::_pbi::TcParser::FastEvR1,
     {40, 63, 1, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.restrict_to_profession_)}},
    // optional uint32 minimum_level = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagMarket, _impl_.minimum_level_), 2>(),
     {48, 2, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.minimum_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .rme.protobuf.appearances.ITEM_CATEGORY category = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.category_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 trade_as_object_id = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.trade_as_object_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 show_as_object_id = 3;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.show_as_object_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .rme.protobuf.appearances.PLAYER_PROFESSION restrict_to_profession = 5;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.restrict_to_profession_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnum)},
    // optional uint32 minimum_level = 6;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.minimum_level_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {1, 26},
    {::_pbi::FieldAuxEnumData{}, ::rme::protobuf::appearances::PLAYER_PROFESSION_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagMarket::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagMarket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.restrict_to_profession_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.trade_as_object_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.minimum_level_) -
        reinterpret_cast<char*>(&_impl_.trade_as_object_id_)) + sizeof(_impl_.minimum_level_));
    _impl_.category_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagMarket::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagMarket& this_ = static_cast<const AppearanceFlagMarket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagMarket::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagMarket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagMarket)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.ITEM_CATEGORY category = 1;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_category(), target);
          }

          // optional uint32 trade_as_object_id = 2;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_trade_as_object_id(), target);
          }

          // optional uint32 show_as_object_id = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_show_as_object_id(), target);
          }

          // repeated .rme.protobuf.appearances.PLAYER_PROFESSION restrict_to_profession = 5;
          for (int i = 0, n = this_._internal_restrict_to_profession_size(); i < n; ++i) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, static_cast<::rme::protobuf::appearances::PLAYER_PROFESSION>(this_._internal_restrict_to_profession().Get(i)),
                target);
          }

          // optional uint32 minimum_level = 6;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_minimum_level(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagMarket)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagMarket::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagMarket& this_ = static_cast<const AppearanceFlagMarket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagMarket::ByteSizeLong() const {
          const AppearanceFlagMarket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagMarket)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rme.protobuf.appearances.PLAYER_PROFESSION restrict_to_profession = 5;
            {
              std::size_t data_size =
                  ::_pbi::WireFormatLite::EnumSize(this_._internal_restrict_to_profession());
              std::size_t tag_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_restrict_to_profession_size());
              total_size += data_size + tag_size;
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional uint32 trade_as_object_id = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_trade_as_object_id());
            }
            // optional uint32 show_as_object_id = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_show_as_object_id());
            }
            // optional uint32 minimum_level = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_minimum_level());
            }
            // optional .rme.protobuf.appearances.ITEM_CATEGORY category = 1;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_category());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagMarket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagMarket*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagMarket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagMarket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_restrict_to_profession()->MergeFrom(from._internal_restrict_to_profession());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.trade_as_object_id_ = from._impl_.trade_as_object_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.show_as_object_id_ = from._impl_.show_as_object_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.minimum_level_ = from._impl_.minimum_level_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.category_ = from._impl_.category_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagMarket::CopyFrom(const AppearanceFlagMarket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagMarket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagMarket::InternalSwap(AppearanceFlagMarket* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.restrict_to_profession_.InternalSwap(&other->_impl_.restrict_to_profession_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.category_)
      + sizeof(AppearanceFlagMarket::_impl_.category_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.trade_as_object_id_)>(
          reinterpret_cast<char*>(&_impl_.trade_as_object_id_),
          reinterpret_cast<char*>(&other->_impl_.trade_as_object_id_));
}

::google::protobuf::Metadata AppearanceFlagMarket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagNPC::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagNPC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_._has_bits_);
};

AppearanceFlagNPC::AppearanceFlagNPC(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagNPC)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagNPC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rme::protobuf::appearances::AppearanceFlagNPC& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        location_(arena, from.location_),
        currency_quest_flag_display_name_(arena, from.currency_quest_flag_display_name_) {}

AppearanceFlagNPC::AppearanceFlagNPC(
    ::google::protobuf::Arena* arena,
    const AppearanceFlagNPC& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AppearanceFlagNPC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sale_price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sale_price_),
           offsetof(Impl_, currency_object_type_id_) -
               offsetof(Impl_, sale_price_) +
               sizeof(Impl_::currency_object_type_id_));

  // @@protoc_insertion_point(copy_constructor:rme.protobuf.appearances.AppearanceFlagNPC)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagNPC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        location_(arena),
        currency_quest_flag_display_name_(arena) {}

inline void AppearanceFlagNPC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sale_price_),
           0,
           offsetof(Impl_, currency_object_type_id_) -
               offsetof(Impl_, sale_price_) +
               sizeof(Impl_::currency_object_type_id_));
}
AppearanceFlagNPC::~AppearanceFlagNPC() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagNPC)
  SharedDtor(*this);
}
inline void AppearanceFlagNPC::SharedDtor(MessageLite& self) {
  AppearanceFlagNPC& this_ = static_cast<AppearanceFlagNPC&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.location_.Destroy();
  this_._impl_.currency_quest_flag_display_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagNPC::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagNPC(arena);
}
constexpr auto AppearanceFlagNPC::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AppearanceFlagNPC),
                                            alignof(AppearanceFlagNPC));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagNPC::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagNPC_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagNPC::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagNPC>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagNPC::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagNPC>(), &AppearanceFlagNPC::ByteSizeLong,
            &AppearanceFlagNPC::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagNPC::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagNPC::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> AppearanceFlagNPC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagNPC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bytes name = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.name_)}},
    // optional bytes location = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.location_)}},
    // optional uint32 sale_price = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagNPC, _impl_.sale_price_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.sale_price_)}},
    // optional uint32 buy_price = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagNPC, _impl_.buy_price_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.buy_price_)}},
    // optional uint32 currency_object_type_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagNPC, _impl_.currency_object_type_id_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_object_type_id_)}},
    // optional bytes currency_quest_flag_display_name = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_quest_flag_display_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes name = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes location = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.location_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 sale_price = 3;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.sale_price_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 buy_price = 4;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.buy_price_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 currency_object_type_id = 5;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_object_type_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes currency_quest_flag_display_name = 6;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_quest_flag_display_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagNPC::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagNPC)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.location_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.currency_quest_flag_display_name_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&_impl_.sale_price_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.currency_object_type_id_) -
        reinterpret_cast<char*>(&_impl_.sale_price_)) + sizeof(_impl_.currency_object_type_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagNPC::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagNPC& this_ = static_cast<const AppearanceFlagNPC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagNPC::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagNPC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagNPC)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional bytes name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // optional bytes location = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_location();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // optional uint32 sale_price = 3;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_sale_price(), target);
          }

          // optional uint32 buy_price = 4;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_buy_price(), target);
          }

          // optional uint32 currency_object_type_id = 5;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_currency_object_type_id(), target);
          }

          // optional bytes currency_quest_flag_display_name = 6;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_currency_quest_flag_display_name();
            target = stream->WriteBytesMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagNPC)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagNPC::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagNPC& this_ = static_cast<const AppearanceFlagNPC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagNPC::ByteSizeLong() const {
          const AppearanceFlagNPC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagNPC)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // optional bytes name = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_name());
            }
            // optional bytes location = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_location());
            }
            // optional bytes currency_quest_flag_display_name = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_currency_quest_flag_display_name());
            }
            // optional uint32 sale_price = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_sale_price());
            }
            // optional uint32 buy_price = 4;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_buy_price());
            }
            // optional uint32 currency_object_type_id = 5;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_currency_object_type_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagNPC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagNPC*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagNPC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagNPC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_location(from._internal_location());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_currency_quest_flag_display_name(from._internal_currency_quest_flag_display_name());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.sale_price_ = from._impl_.sale_price_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.buy_price_ = from._impl_.buy_price_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.currency_object_type_id_ = from._impl_.currency_object_type_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagNPC::CopyFrom(const AppearanceFlagNPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagNPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagNPC::InternalSwap(AppearanceFlagNPC* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.location_, &other->_impl_.location_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_quest_flag_display_name_, &other->_impl_.currency_quest_flag_display_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_object_type_id_)
      + sizeof(AppearanceFlagNPC::_impl_.currency_object_type_id_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.sale_price_)>(
          reinterpret_cast<char*>(&_impl_.sale_price_),
          reinterpret_cast<char*>(&other->_impl_.sale_price_));
}

::google::protobuf::Metadata AppearanceFlagNPC::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagAutomap::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagAutomap>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagAutomap, _impl_._has_bits_);
};

AppearanceFlagAutomap::AppearanceFlagAutomap(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagAutomap)
}
AppearanceFlagAutomap::AppearanceFlagAutomap(
    ::google::protobuf::Arena* arena, const AppearanceFlagAutomap& from)
    : AppearanceFlagAutomap(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagAutomap::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagAutomap::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.color_ = {};
}
AppearanceFlagAutomap::~AppearanceFlagAutomap() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagAutomap)
  SharedDtor(*this);
}
inline void AppearanceFlagAutomap::SharedDtor(MessageLite& self) {
  AppearanceFlagAutomap& this_ = static_cast<AppearanceFlagAutomap&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagAutomap::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagAutomap(arena);
}
constexpr auto AppearanceFlagAutomap::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagAutomap),
                                            alignof(AppearanceFlagAutomap));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagAutomap::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagAutomap_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagAutomap::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagAutomap>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagAutomap::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagAutomap>(), &AppearanceFlagAutomap::ByteSizeLong,
            &AppearanceFlagAutomap::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagAutomap, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagAutomap::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagAutomap::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagAutomap::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagAutomap, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagAutomap>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 color = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagAutomap, _impl_.color_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagAutomap, _impl_.color_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 color = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagAutomap, _impl_.color_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagAutomap::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagAutomap)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.color_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagAutomap::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagAutomap& this_ = static_cast<const AppearanceFlagAutomap&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagAutomap::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagAutomap& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagAutomap)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 color = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_color(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagAutomap)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagAutomap::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagAutomap& this_ = static_cast<const AppearanceFlagAutomap&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagAutomap::ByteSizeLong() const {
          const AppearanceFlagAutomap& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagAutomap)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 color = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_color());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagAutomap::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagAutomap*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagAutomap&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagAutomap)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.color_ = from._impl_.color_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagAutomap::CopyFrom(const AppearanceFlagAutomap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagAutomap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagAutomap::InternalSwap(AppearanceFlagAutomap* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.color_, other->_impl_.color_);
}

::google::protobuf::Metadata AppearanceFlagAutomap::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagHook::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagHook>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_._has_bits_);
};

AppearanceFlagHook::AppearanceFlagHook(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagHook)
}
AppearanceFlagHook::AppearanceFlagHook(
    ::google::protobuf::Arena* arena, const AppearanceFlagHook& from)
    : AppearanceFlagHook(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagHook::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        direction_{static_cast< ::rme::protobuf::appearances::HOOK_TYPE >(1)} {}

inline void AppearanceFlagHook::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AppearanceFlagHook::~AppearanceFlagHook() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagHook)
  SharedDtor(*this);
}
inline void AppearanceFlagHook::SharedDtor(MessageLite& self) {
  AppearanceFlagHook& this_ = static_cast<AppearanceFlagHook&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagHook::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagHook(arena);
}
constexpr auto AppearanceFlagHook::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AppearanceFlagHook),
                                            alignof(AppearanceFlagHook));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagHook::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagHook_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagHook::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagHook>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagHook::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagHook>(), &AppearanceFlagHook::ByteSizeLong,
            &AppearanceFlagHook::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagHook::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagHook::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AppearanceFlagHook::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagHook>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .rme.protobuf.appearances.HOOK_TYPE direction = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 2, PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_.direction_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .rme.protobuf.appearances.HOOK_TYPE direction = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_.direction_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 2},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagHook::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagHook)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.direction_ = 1;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagHook::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagHook& this_ = static_cast<const AppearanceFlagHook&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagHook::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagHook& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagHook)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .rme.protobuf.appearances.HOOK_TYPE direction = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_direction(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagHook)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagHook::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagHook& this_ = static_cast<const AppearanceFlagHook&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagHook::ByteSizeLong() const {
          const AppearanceFlagHook& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagHook)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional .rme.protobuf.appearances.HOOK_TYPE direction = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagHook::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagHook*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagHook&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagHook)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagHook::CopyFrom(const AppearanceFlagHook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagHook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagHook::InternalSwap(AppearanceFlagHook* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.direction_, other->_impl_.direction_);
}

::google::protobuf::Metadata AppearanceFlagHook::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagLenshelp::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagLenshelp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagLenshelp, _impl_._has_bits_);
};

AppearanceFlagLenshelp::AppearanceFlagLenshelp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagLenshelp)
}
AppearanceFlagLenshelp::AppearanceFlagLenshelp(
    ::google::protobuf::Arena* arena, const AppearanceFlagLenshelp& from)
    : AppearanceFlagLenshelp(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagLenshelp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagLenshelp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
AppearanceFlagLenshelp::~AppearanceFlagLenshelp() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagLenshelp)
  SharedDtor(*this);
}
inline void AppearanceFlagLenshelp::SharedDtor(MessageLite& self) {
  AppearanceFlagLenshelp& this_ = static_cast<AppearanceFlagLenshelp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagLenshelp::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagLenshelp(arena);
}
constexpr auto AppearanceFlagLenshelp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagLenshelp),
                                            alignof(AppearanceFlagLenshelp));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagLenshelp::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagLenshelp_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagLenshelp::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagLenshelp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagLenshelp::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagLenshelp>(), &AppearanceFlagLenshelp::ByteSizeLong,
            &AppearanceFlagLenshelp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagLenshelp, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagLenshelp::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagLenshelp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagLenshelp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagLenshelp, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagLenshelp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagLenshelp, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagLenshelp, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagLenshelp, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagLenshelp::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagLenshelp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagLenshelp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagLenshelp& this_ = static_cast<const AppearanceFlagLenshelp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagLenshelp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagLenshelp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagLenshelp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagLenshelp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagLenshelp::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagLenshelp& this_ = static_cast<const AppearanceFlagLenshelp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagLenshelp::ByteSizeLong() const {
          const AppearanceFlagLenshelp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagLenshelp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 id = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagLenshelp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagLenshelp*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagLenshelp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagLenshelp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagLenshelp::CopyFrom(const AppearanceFlagLenshelp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagLenshelp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagLenshelp::InternalSwap(AppearanceFlagLenshelp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata AppearanceFlagLenshelp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagChangedToExpire::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagChangedToExpire>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagChangedToExpire, _impl_._has_bits_);
};

AppearanceFlagChangedToExpire::AppearanceFlagChangedToExpire(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagChangedToExpire)
}
AppearanceFlagChangedToExpire::AppearanceFlagChangedToExpire(
    ::google::protobuf::Arena* arena, const AppearanceFlagChangedToExpire& from)
    : AppearanceFlagChangedToExpire(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagChangedToExpire::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagChangedToExpire::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.former_object_typeid_ = {};
}
AppearanceFlagChangedToExpire::~AppearanceFlagChangedToExpire() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagChangedToExpire)
  SharedDtor(*this);
}
inline void AppearanceFlagChangedToExpire::SharedDtor(MessageLite& self) {
  AppearanceFlagChangedToExpire& this_ = static_cast<AppearanceFlagChangedToExpire&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagChangedToExpire::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagChangedToExpire(arena);
}
constexpr auto AppearanceFlagChangedToExpire::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagChangedToExpire),
                                            alignof(AppearanceFlagChangedToExpire));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagChangedToExpire::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagChangedToExpire_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagChangedToExpire::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagChangedToExpire>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagChangedToExpire::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagChangedToExpire>(), &AppearanceFlagChangedToExpire::ByteSizeLong,
            &AppearanceFlagChangedToExpire::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagChangedToExpire, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagChangedToExpire::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagChangedToExpire::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagChangedToExpire::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagChangedToExpire, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagChangedToExpire>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 former_object_typeid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagChangedToExpire, _impl_.former_object_typeid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagChangedToExpire, _impl_.former_object_typeid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 former_object_typeid = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagChangedToExpire, _impl_.former_object_typeid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagChangedToExpire::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagChangedToExpire)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.former_object_typeid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagChangedToExpire::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagChangedToExpire& this_ = static_cast<const AppearanceFlagChangedToExpire&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagChangedToExpire::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagChangedToExpire& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagChangedToExpire)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 former_object_typeid = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_former_object_typeid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagChangedToExpire)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagChangedToExpire::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagChangedToExpire& this_ = static_cast<const AppearanceFlagChangedToExpire&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagChangedToExpire::ByteSizeLong() const {
          const AppearanceFlagChangedToExpire& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagChangedToExpire)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 former_object_typeid = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_former_object_typeid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagChangedToExpire::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagChangedToExpire*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagChangedToExpire&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagChangedToExpire)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.former_object_typeid_ = from._impl_.former_object_typeid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagChangedToExpire::CopyFrom(const AppearanceFlagChangedToExpire& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagChangedToExpire)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagChangedToExpire::InternalSwap(AppearanceFlagChangedToExpire* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.former_object_typeid_, other->_impl_.former_object_typeid_);
}

::google::protobuf::Metadata AppearanceFlagChangedToExpire::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagCyclopedia::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagCyclopedia>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagCyclopedia, _impl_._has_bits_);
};

AppearanceFlagCyclopedia::AppearanceFlagCyclopedia(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagCyclopedia)
}
AppearanceFlagCyclopedia::AppearanceFlagCyclopedia(
    ::google::protobuf::Arena* arena, const AppearanceFlagCyclopedia& from)
    : AppearanceFlagCyclopedia(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagCyclopedia::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagCyclopedia::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cyclopedia_type_ = {};
}
AppearanceFlagCyclopedia::~AppearanceFlagCyclopedia() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagCyclopedia)
  SharedDtor(*this);
}
inline void AppearanceFlagCyclopedia::SharedDtor(MessageLite& self) {
  AppearanceFlagCyclopedia& this_ = static_cast<AppearanceFlagCyclopedia&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagCyclopedia::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagCyclopedia(arena);
}
constexpr auto AppearanceFlagCyclopedia::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagCyclopedia),
                                            alignof(AppearanceFlagCyclopedia));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagCyclopedia::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagCyclopedia_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagCyclopedia::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagCyclopedia>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagCyclopedia::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagCyclopedia>(), &AppearanceFlagCyclopedia::ByteSizeLong,
            &AppearanceFlagCyclopedia::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagCyclopedia, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagCyclopedia::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagCyclopedia::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagCyclopedia::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagCyclopedia, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagCyclopedia>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 cyclopedia_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagCyclopedia, _impl_.cyclopedia_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagCyclopedia, _impl_.cyclopedia_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 cyclopedia_type = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagCyclopedia, _impl_.cyclopedia_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagCyclopedia::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagCyclopedia)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cyclopedia_type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagCyclopedia::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagCyclopedia& this_ = static_cast<const AppearanceFlagCyclopedia&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagCyclopedia::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagCyclopedia& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagCyclopedia)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 cyclopedia_type = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_cyclopedia_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagCyclopedia)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagCyclopedia::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagCyclopedia& this_ = static_cast<const AppearanceFlagCyclopedia&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagCyclopedia::ByteSizeLong() const {
          const AppearanceFlagCyclopedia& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagCyclopedia)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 cyclopedia_type = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_cyclopedia_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagCyclopedia::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagCyclopedia*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagCyclopedia&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagCyclopedia)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.cyclopedia_type_ = from._impl_.cyclopedia_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagCyclopedia::CopyFrom(const AppearanceFlagCyclopedia& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagCyclopedia)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagCyclopedia::InternalSwap(AppearanceFlagCyclopedia* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.cyclopedia_type_, other->_impl_.cyclopedia_type_);
}

::google::protobuf::Metadata AppearanceFlagCyclopedia::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpecialMeaningAppearanceIds::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SpecialMeaningAppearanceIds>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_._has_bits_);
};

SpecialMeaningAppearanceIds::SpecialMeaningAppearanceIds(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.SpecialMeaningAppearanceIds)
}
SpecialMeaningAppearanceIds::SpecialMeaningAppearanceIds(
    ::google::protobuf::Arena* arena, const SpecialMeaningAppearanceIds& from)
    : SpecialMeaningAppearanceIds(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SpecialMeaningAppearanceIds::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SpecialMeaningAppearanceIds::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gold_coin_id_),
           0,
           offsetof(Impl_, reward_chest_id_) -
               offsetof(Impl_, gold_coin_id_) +
               sizeof(Impl_::reward_chest_id_));
}
SpecialMeaningAppearanceIds::~SpecialMeaningAppearanceIds() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.SpecialMeaningAppearanceIds)
  SharedDtor(*this);
}
inline void SpecialMeaningAppearanceIds::SharedDtor(MessageLite& self) {
  SpecialMeaningAppearanceIds& this_ = static_cast<SpecialMeaningAppearanceIds&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SpecialMeaningAppearanceIds::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SpecialMeaningAppearanceIds(arena);
}
constexpr auto SpecialMeaningAppearanceIds::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SpecialMeaningAppearanceIds),
                                            alignof(SpecialMeaningAppearanceIds));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SpecialMeaningAppearanceIds::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SpecialMeaningAppearanceIds_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SpecialMeaningAppearanceIds::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SpecialMeaningAppearanceIds>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SpecialMeaningAppearanceIds::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SpecialMeaningAppearanceIds>(), &SpecialMeaningAppearanceIds::ByteSizeLong,
            &SpecialMeaningAppearanceIds::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_._cached_size_),
        false,
    },
    &SpecialMeaningAppearanceIds::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SpecialMeaningAppearanceIds::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> SpecialMeaningAppearanceIds::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::SpecialMeaningAppearanceIds>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 gold_coin_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.gold_coin_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.gold_coin_id_)}},
    // optional uint32 platinum_coin_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.platinum_coin_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.platinum_coin_id_)}},
    // optional uint32 crystal_coin_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.crystal_coin_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.crystal_coin_id_)}},
    // optional uint32 tibia_coin_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.tibia_coin_id_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.tibia_coin_id_)}},
    // optional uint32 stamped_letter_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.stamped_letter_id_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.stamped_letter_id_)}},
    // optional uint32 supply_stash_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.supply_stash_id_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.supply_stash_id_)}},
    // optional uint32 reward_chest_id = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.reward_chest_id_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.reward_chest_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 gold_coin_id = 1;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.gold_coin_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 platinum_coin_id = 2;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.platinum_coin_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 crystal_coin_id = 3;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.crystal_coin_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tibia_coin_id = 4;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.tibia_coin_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 stamped_letter_id = 5;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.stamped_letter_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 supply_stash_id = 6;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.supply_stash_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 reward_chest_id = 7;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.reward_chest_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SpecialMeaningAppearanceIds::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.SpecialMeaningAppearanceIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&_impl_.gold_coin_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.reward_chest_id_) -
        reinterpret_cast<char*>(&_impl_.gold_coin_id_)) + sizeof(_impl_.reward_chest_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SpecialMeaningAppearanceIds::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SpecialMeaningAppearanceIds& this_ = static_cast<const SpecialMeaningAppearanceIds&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SpecialMeaningAppearanceIds::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SpecialMeaningAppearanceIds& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.SpecialMeaningAppearanceIds)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 gold_coin_id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_gold_coin_id(), target);
          }

          // optional uint32 platinum_coin_id = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_platinum_coin_id(), target);
          }

          // optional uint32 crystal_coin_id = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_crystal_coin_id(), target);
          }

          // optional uint32 tibia_coin_id = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_tibia_coin_id(), target);
          }

          // optional uint32 stamped_letter_id = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_stamped_letter_id(), target);
          }

          // optional uint32 supply_stash_id = 6;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_supply_stash_id(), target);
          }

          // optional uint32 reward_chest_id = 7;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_reward_chest_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.SpecialMeaningAppearanceIds)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SpecialMeaningAppearanceIds::ByteSizeLong(const MessageLite& base) {
          const SpecialMeaningAppearanceIds& this_ = static_cast<const SpecialMeaningAppearanceIds&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SpecialMeaningAppearanceIds::ByteSizeLong() const {
          const SpecialMeaningAppearanceIds& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.SpecialMeaningAppearanceIds)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // optional uint32 gold_coin_id = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gold_coin_id());
            }
            // optional uint32 platinum_coin_id = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_platinum_coin_id());
            }
            // optional uint32 crystal_coin_id = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_crystal_coin_id());
            }
            // optional uint32 tibia_coin_id = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_tibia_coin_id());
            }
            // optional uint32 stamped_letter_id = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_stamped_letter_id());
            }
            // optional uint32 supply_stash_id = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_supply_stash_id());
            }
            // optional uint32 reward_chest_id = 7;
            if (cached_has_bits & 0x00000040u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_reward_chest_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SpecialMeaningAppearanceIds::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpecialMeaningAppearanceIds*>(&to_msg);
  auto& from = static_cast<const SpecialMeaningAppearanceIds&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.SpecialMeaningAppearanceIds)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.gold_coin_id_ = from._impl_.gold_coin_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.platinum_coin_id_ = from._impl_.platinum_coin_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.crystal_coin_id_ = from._impl_.crystal_coin_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.tibia_coin_id_ = from._impl_.tibia_coin_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.stamped_letter_id_ = from._impl_.stamped_letter_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.supply_stash_id_ = from._impl_.supply_stash_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.reward_chest_id_ = from._impl_.reward_chest_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpecialMeaningAppearanceIds::CopyFrom(const SpecialMeaningAppearanceIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.SpecialMeaningAppearanceIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpecialMeaningAppearanceIds::InternalSwap(SpecialMeaningAppearanceIds* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.reward_chest_id_)
      + sizeof(SpecialMeaningAppearanceIds::_impl_.reward_chest_id_)
      - PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.gold_coin_id_)>(
          reinterpret_cast<char*>(&_impl_.gold_coin_id_),
          reinterpret_cast<char*>(&other->_impl_.gold_coin_id_));
}

::google::protobuf::Metadata SpecialMeaningAppearanceIds::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagSkillWheelGem::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagSkillWheelGem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagSkillWheelGem, _impl_._has_bits_);
};

AppearanceFlagSkillWheelGem::AppearanceFlagSkillWheelGem(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagSkillWheelGem)
}
AppearanceFlagSkillWheelGem::AppearanceFlagSkillWheelGem(
    ::google::protobuf::Arena* arena, const AppearanceFlagSkillWheelGem& from)
    : AppearanceFlagSkillWheelGem(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagSkillWheelGem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagSkillWheelGem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gem_quality_id_),
           0,
           offsetof(Impl_, vocation_id_) -
               offsetof(Impl_, gem_quality_id_) +
               sizeof(Impl_::vocation_id_));
}
AppearanceFlagSkillWheelGem::~AppearanceFlagSkillWheelGem() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagSkillWheelGem)
  SharedDtor(*this);
}
inline void AppearanceFlagSkillWheelGem::SharedDtor(MessageLite& self) {
  AppearanceFlagSkillWheelGem& this_ = static_cast<AppearanceFlagSkillWheelGem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagSkillWheelGem::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagSkillWheelGem(arena);
}
constexpr auto AppearanceFlagSkillWheelGem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagSkillWheelGem),
                                            alignof(AppearanceFlagSkillWheelGem));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagSkillWheelGem::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagSkillWheelGem_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagSkillWheelGem::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagSkillWheelGem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagSkillWheelGem::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagSkillWheelGem>(), &AppearanceFlagSkillWheelGem::ByteSizeLong,
            &AppearanceFlagSkillWheelGem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagSkillWheelGem, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagSkillWheelGem::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagSkillWheelGem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AppearanceFlagSkillWheelGem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagSkillWheelGem, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagSkillWheelGem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 vocation_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagSkillWheelGem, _impl_.vocation_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagSkillWheelGem, _impl_.vocation_id_)}},
    // optional uint32 gem_quality_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagSkillWheelGem, _impl_.gem_quality_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagSkillWheelGem, _impl_.gem_quality_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 gem_quality_id = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagSkillWheelGem, _impl_.gem_quality_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 vocation_id = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagSkillWheelGem, _impl_.vocation_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagSkillWheelGem::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagSkillWheelGem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.gem_quality_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.vocation_id_) -
        reinterpret_cast<char*>(&_impl_.gem_quality_id_)) + sizeof(_impl_.vocation_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagSkillWheelGem::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagSkillWheelGem& this_ = static_cast<const AppearanceFlagSkillWheelGem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagSkillWheelGem::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagSkillWheelGem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagSkillWheelGem)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 gem_quality_id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_gem_quality_id(), target);
          }

          // optional uint32 vocation_id = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_vocation_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagSkillWheelGem)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagSkillWheelGem::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagSkillWheelGem& this_ = static_cast<const AppearanceFlagSkillWheelGem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagSkillWheelGem::ByteSizeLong() const {
          const AppearanceFlagSkillWheelGem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagSkillWheelGem)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional uint32 gem_quality_id = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gem_quality_id());
            }
            // optional uint32 vocation_id = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_vocation_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagSkillWheelGem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagSkillWheelGem*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagSkillWheelGem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagSkillWheelGem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.gem_quality_id_ = from._impl_.gem_quality_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.vocation_id_ = from._impl_.vocation_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagSkillWheelGem::CopyFrom(const AppearanceFlagSkillWheelGem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagSkillWheelGem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagSkillWheelGem::InternalSwap(AppearanceFlagSkillWheelGem* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagSkillWheelGem, _impl_.vocation_id_)
      + sizeof(AppearanceFlagSkillWheelGem::_impl_.vocation_id_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagSkillWheelGem, _impl_.gem_quality_id_)>(
          reinterpret_cast<char*>(&_impl_.gem_quality_id_),
          reinterpret_cast<char*>(&other->_impl_.gem_quality_id_));
}

::google::protobuf::Metadata AppearanceFlagSkillWheelGem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagImbueable::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagImbueable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagImbueable, _impl_._has_bits_);
};

AppearanceFlagImbueable::AppearanceFlagImbueable(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagImbueable)
}
AppearanceFlagImbueable::AppearanceFlagImbueable(
    ::google::protobuf::Arena* arena, const AppearanceFlagImbueable& from)
    : AppearanceFlagImbueable(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagImbueable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagImbueable::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.slot_count_ = {};
}
AppearanceFlagImbueable::~AppearanceFlagImbueable() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagImbueable)
  SharedDtor(*this);
}
inline void AppearanceFlagImbueable::SharedDtor(MessageLite& self) {
  AppearanceFlagImbueable& this_ = static_cast<AppearanceFlagImbueable&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagImbueable::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagImbueable(arena);
}
constexpr auto AppearanceFlagImbueable::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagImbueable),
                                            alignof(AppearanceFlagImbueable));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagImbueable::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagImbueable_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagImbueable::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagImbueable>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagImbueable::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagImbueable>(), &AppearanceFlagImbueable::ByteSizeLong,
            &AppearanceFlagImbueable::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagImbueable, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagImbueable::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagImbueable::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagImbueable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagImbueable, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagImbueable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 slot_count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagImbueable, _impl_.slot_count_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagImbueable, _impl_.slot_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 slot_count = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagImbueable, _impl_.slot_count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagImbueable::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagImbueable)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_count_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagImbueable::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagImbueable& this_ = static_cast<const AppearanceFlagImbueable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagImbueable::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagImbueable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagImbueable)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 slot_count = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_slot_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagImbueable)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagImbueable::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagImbueable& this_ = static_cast<const AppearanceFlagImbueable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagImbueable::ByteSizeLong() const {
          const AppearanceFlagImbueable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagImbueable)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 slot_count = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_slot_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagImbueable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagImbueable*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagImbueable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagImbueable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.slot_count_ = from._impl_.slot_count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagImbueable::CopyFrom(const AppearanceFlagImbueable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagImbueable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagImbueable::InternalSwap(AppearanceFlagImbueable* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.slot_count_, other->_impl_.slot_count_);
}

::google::protobuf::Metadata AppearanceFlagImbueable::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AppearanceFlagProficiency::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AppearanceFlagProficiency>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagProficiency, _impl_._has_bits_);
};

AppearanceFlagProficiency::AppearanceFlagProficiency(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rme.protobuf.appearances.AppearanceFlagProficiency)
}
AppearanceFlagProficiency::AppearanceFlagProficiency(
    ::google::protobuf::Arena* arena, const AppearanceFlagProficiency& from)
    : AppearanceFlagProficiency(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagProficiency::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagProficiency::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proficiency_id_ = {};
}
AppearanceFlagProficiency::~AppearanceFlagProficiency() {
  // @@protoc_insertion_point(destructor:rme.protobuf.appearances.AppearanceFlagProficiency)
  SharedDtor(*this);
}
inline void AppearanceFlagProficiency::SharedDtor(MessageLite& self) {
  AppearanceFlagProficiency& this_ = static_cast<AppearanceFlagProficiency&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AppearanceFlagProficiency::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AppearanceFlagProficiency(arena);
}
constexpr auto AppearanceFlagProficiency::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AppearanceFlagProficiency),
                                            alignof(AppearanceFlagProficiency));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AppearanceFlagProficiency::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AppearanceFlagProficiency_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AppearanceFlagProficiency::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AppearanceFlagProficiency>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AppearanceFlagProficiency::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AppearanceFlagProficiency>(), &AppearanceFlagProficiency::ByteSizeLong,
            &AppearanceFlagProficiency::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AppearanceFlagProficiency, _impl_._cached_size_),
        false,
    },
    &AppearanceFlagProficiency::kDescriptorMethods,
    &descriptor_table_appearances_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AppearanceFlagProficiency::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagProficiency::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagProficiency, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rme::protobuf::appearances::AppearanceFlagProficiency>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 proficiency_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagProficiency, _impl_.proficiency_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagProficiency, _impl_.proficiency_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 proficiency_id = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagProficiency, _impl_.proficiency_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AppearanceFlagProficiency::Clear() {
// @@protoc_insertion_point(message_clear_start:rme.protobuf.appearances.AppearanceFlagProficiency)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proficiency_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AppearanceFlagProficiency::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AppearanceFlagProficiency& this_ = static_cast<const AppearanceFlagProficiency&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AppearanceFlagProficiency::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AppearanceFlagProficiency& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rme.protobuf.appearances.AppearanceFlagProficiency)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 proficiency_id = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_proficiency_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rme.protobuf.appearances.AppearanceFlagProficiency)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AppearanceFlagProficiency::ByteSizeLong(const MessageLite& base) {
          const AppearanceFlagProficiency& this_ = static_cast<const AppearanceFlagProficiency&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AppearanceFlagProficiency::ByteSizeLong() const {
          const AppearanceFlagProficiency& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rme.protobuf.appearances.AppearanceFlagProficiency)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional uint32 proficiency_id = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_proficiency_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AppearanceFlagProficiency::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppearanceFlagProficiency*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagProficiency&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rme.protobuf.appearances.AppearanceFlagProficiency)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.proficiency_id_ = from._impl_.proficiency_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagProficiency::CopyFrom(const AppearanceFlagProficiency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rme.protobuf.appearances.AppearanceFlagProficiency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AppearanceFlagProficiency::InternalSwap(AppearanceFlagProficiency* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.proficiency_id_, other->_impl_.proficiency_id_);
}

::google::protobuf::Metadata AppearanceFlagProficiency::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace appearances
}  // namespace protobuf
}  // namespace rme
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_appearances_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
